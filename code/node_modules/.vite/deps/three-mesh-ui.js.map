{
  "version": 3,
  "sources": ["../../three-mesh-ui/build/three-mesh-ui.module.js"],
  "sourcesContent": ["import * as __WEBPACK_EXTERNAL_MODULE_three__ from \"three\";\r\n/******/ // The require scope\r\n/******/ var __webpack_require__ = {};\r\n/******/ \r\n/************************************************************************/\r\n/******/ /* webpack/runtime/define property getters */\r\n/******/ (() => {\r\n/******/ \t// define getter functions for harmony exports\r\n/******/ \t__webpack_require__.d = (exports, definition) => {\r\n/******/ \t\tfor(var key in definition) {\r\n/******/ \t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\r\n/******/ \t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\r\n/******/ \t\t\t}\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/ })();\r\n/******/ \r\n/******/ /* webpack/runtime/hasOwnProperty shorthand */\r\n/******/ (() => {\r\n/******/ \t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\r\n/******/ })();\r\n/******/ \r\n/******/ /* webpack/runtime/make namespace object */\r\n/******/ (() => {\r\n/******/ \t// define __esModule on exports\r\n/******/ \t__webpack_require__.r = (exports) => {\r\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\r\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\r\n/******/ \t\t}\r\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\r\n/******/ \t};\r\n/******/ })();\r\n/******/ \r\n/************************************************************************/\r\nvar __webpack_exports__ = {};\r\n\r\n// EXPORTS\r\n__webpack_require__.d(__webpack_exports__, {\r\n  \"g1\": () => (/* reexport */ AlignItems_namespaceObject),\r\n  \"gO\": () => (/* reexport */ Block),\r\n  \"km\": () => (/* reexport */ ContentDirection_namespaceObject),\r\n  \"zV\": () => (/* reexport */ core_FontLibrary),\r\n  \"ol\": () => (/* reexport */ InlineBlock),\r\n  \"uM\": () => (/* reexport */ JustifyContent_namespaceObject),\r\n  \"N1\": () => (/* reexport */ Keyboard),\r\n  \"xv\": () => (/* reexport */ Text),\r\n  \"PH\": () => (/* reexport */ TextAlign_namespaceObject),\r\n  \"UH\": () => (/* reexport */ Whitespace_namespaceObject),\r\n  \"ZP\": () => (/* binding */ three_mesh_ui),\r\n  \"Vx\": () => (/* binding */ update)\r\n});\r\n\r\n// NAMESPACE OBJECT: ./src/utils/block-layout/ContentDirection.js\r\nvar ContentDirection_namespaceObject = {};\r\n__webpack_require__.r(ContentDirection_namespaceObject);\r\n__webpack_require__.d(ContentDirection_namespaceObject, {\r\n  \"COLUMN\": () => (COLUMN),\r\n  \"COLUMN_REVERSE\": () => (COLUMN_REVERSE),\r\n  \"ROW\": () => (ROW),\r\n  \"ROW_REVERSE\": () => (ROW_REVERSE),\r\n  \"contentDirection\": () => (contentDirection)\r\n});\r\n\r\n// NAMESPACE OBJECT: ./src/utils/block-layout/AlignItems.js\r\nvar AlignItems_namespaceObject = {};\r\n__webpack_require__.r(AlignItems_namespaceObject);\r\n__webpack_require__.d(AlignItems_namespaceObject, {\r\n  \"CENTER\": () => (CENTER),\r\n  \"END\": () => (END),\r\n  \"START\": () => (START),\r\n  \"STRETCH\": () => (STRETCH),\r\n  \"alignItems\": () => (alignItems),\r\n  \"warnAboutDeprecatedAlignItems\": () => (warnAboutDeprecatedAlignItems)\r\n});\r\n\r\n// NAMESPACE OBJECT: ./src/utils/block-layout/JustifyContent.js\r\nvar JustifyContent_namespaceObject = {};\r\n__webpack_require__.r(JustifyContent_namespaceObject);\r\n__webpack_require__.d(JustifyContent_namespaceObject, {\r\n  \"CENTER\": () => (JustifyContent_CENTER),\r\n  \"END\": () => (JustifyContent_END),\r\n  \"SPACE_AROUND\": () => (SPACE_AROUND),\r\n  \"SPACE_BETWEEN\": () => (SPACE_BETWEEN),\r\n  \"SPACE_EVENLY\": () => (SPACE_EVENLY),\r\n  \"START\": () => (JustifyContent_START),\r\n  \"justifyContent\": () => (justifyContent)\r\n});\r\n\r\n// NAMESPACE OBJECT: ./src/utils/inline-layout/Whitespace.js\r\nvar Whitespace_namespaceObject = {};\r\n__webpack_require__.r(Whitespace_namespaceObject);\r\n__webpack_require__.d(Whitespace_namespaceObject, {\r\n  \"NORMAL\": () => (NORMAL),\r\n  \"NOWRAP\": () => (NOWRAP),\r\n  \"PRE\": () => (PRE),\r\n  \"PRE_LINE\": () => (PRE_LINE),\r\n  \"PRE_WRAP\": () => (PRE_WRAP),\r\n  \"WHITE_CHARS\": () => (WHITE_CHARS),\r\n  \"collapseWhitespaceOnInlines\": () => (collapseWhitespaceOnInlines),\r\n  \"collapseWhitespaceOnString\": () => (collapseWhitespaceOnString),\r\n  \"newlineBreakability\": () => (newlineBreakability),\r\n  \"shouldBreak\": () => (Whitespace_shouldBreak)\r\n});\r\n\r\n// NAMESPACE OBJECT: ./src/utils/inline-layout/TextAlign.js\r\nvar TextAlign_namespaceObject = {};\r\n__webpack_require__.r(TextAlign_namespaceObject);\r\n__webpack_require__.d(TextAlign_namespaceObject, {\r\n  \"CENTER\": () => (TextAlign_CENTER),\r\n  \"JUSTIFY\": () => (JUSTIFY),\r\n  \"JUSTIFY_CENTER\": () => (JUSTIFY_CENTER),\r\n  \"JUSTIFY_LEFT\": () => (JUSTIFY_LEFT),\r\n  \"JUSTIFY_RIGHT\": () => (JUSTIFY_RIGHT),\r\n  \"LEFT\": () => (LEFT),\r\n  \"RIGHT\": () => (RIGHT),\r\n  \"textAlign\": () => (textAlign)\r\n});\r\n\r\n;// CONCATENATED MODULE: external \"three\"\r\nvar x = y => { var x = {}; __webpack_require__.d(x, y); return x; }\r\nvar y = x => () => x\r\nconst external_three_namespaceObject = x({ [\"BufferAttribute\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.BufferAttribute, [\"BufferGeometry\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.BufferGeometry, [\"CanvasTexture\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.CanvasTexture, [\"Color\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.Color, [\"FileLoader\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.FileLoader, [\"LinearFilter\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.LinearFilter, [\"Mesh\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.Mesh, [\"Object3D\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.Object3D, [\"Plane\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.Plane, [\"PlaneGeometry\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.PlaneGeometry, [\"ShaderMaterial\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.ShaderMaterial, [\"TextureLoader\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.TextureLoader, [\"Vector2\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.Vector2, [\"Vector3\"]: () => __WEBPACK_EXTERNAL_MODULE_three__.Vector3 });\r\n;// CONCATENATED MODULE: ./src/utils/block-layout/ContentDirection.js\r\nconst ROW = \"row\";\r\nconst ROW_REVERSE = \"row-reverse\";\r\nconst COLUMN = \"column\";\r\nconst COLUMN_REVERSE = \"column-reverse\";\r\n\r\nfunction contentDirection( container, DIRECTION, startPos, REVERSE ){\r\n\r\n\t// end to end children\r\n\tlet accu = startPos;\r\n\r\n\tlet childGetSize = \"getWidth\";\r\n\tlet axisPrimary = \"x\";\r\n\tlet axisSecondary = \"y\";\r\n\r\n\tif( DIRECTION.indexOf( COLUMN ) === 0 ){\r\n\r\n\t\tchildGetSize = \"getHeight\";\r\n\t\taxisPrimary = \"y\";\r\n\t\taxisSecondary = \"x\";\r\n\r\n\t}\r\n\r\n\t// Refactor reduce into fori in order to get rid of this keyword\r\n\tfor ( let i = 0; i < container.childrenBoxes.length; i++ ) {\r\n\r\n\t\tconst child = container.childrenBoxes[ i ];\r\n\r\n\t\tconst CHILD_ID = child.id;\r\n\t\tconst CHILD_SIZE = child[childGetSize]();\r\n\t\tconst CHILD_MARGIN = child.margin || 0;\r\n\r\n\t\taccu += CHILD_MARGIN * REVERSE;\r\n\r\n\t\tcontainer.childrenPos[ CHILD_ID ] = {\r\n\t\t\t[axisPrimary]: accu + ( ( CHILD_SIZE / 2 ) * REVERSE ),\r\n\t\t\t[axisSecondary]: 0\r\n\t\t};\r\n\r\n\t\t// update accu for next children\r\n\t\taccu += ( REVERSE * ( CHILD_SIZE + CHILD_MARGIN ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/utils/block-layout/AlignItems.js\r\n\r\n\r\n\r\nconst START = \"start\";\r\nconst CENTER = \"center\";\r\nconst END = \"end\";\r\nconst STRETCH = \"stretch\"; // Still bit experimental\r\n\r\nfunction alignItems( boxComponent, DIRECTION){\r\n\r\n\tconst ALIGNMENT = boxComponent.getAlignItems();\r\n\tif( AVAILABLE_ALIGN_ITEMS.indexOf(ALIGNMENT) === -1 ){\r\n\r\n\t\tconsole.warn( `alignItems === '${ALIGNMENT}' is not supported` );\r\n\r\n\t}\r\n\r\n\tlet getSizeMethod = \"getWidth\";\r\n\tlet axis = \"x\";\r\n\tif( DIRECTION.indexOf( ROW ) === 0 ){\r\n\r\n\t\tgetSizeMethod = \"getHeight\";\r\n\t\taxis = \"y\";\r\n\r\n\t}\r\n\tconst AXIS_TARGET = ( boxComponent[getSizeMethod]() / 2 ) - ( boxComponent.padding || 0 );\r\n\r\n\tboxComponent.childrenBoxes.forEach( ( child ) => {\r\n\r\n\t\tlet offset;\r\n\r\n\t\tswitch ( ALIGNMENT ){\r\n\r\n\t\t\tcase END:\r\n\t\t\tcase 'right': // @TODO : Deprecated and will be remove upon 7.x.x\r\n\t\t\tcase 'bottom': // @TODO : Deprecated and will be remove upon 7.x.x\r\n\t\t\t\tif( DIRECTION.indexOf( ROW ) === 0 ){\r\n\r\n\t\t\t\t\toffset = - AXIS_TARGET + ( child[getSizeMethod]() / 2 ) + ( child.margin || 0 );\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\toffset = AXIS_TARGET - ( child[getSizeMethod]() / 2 ) - ( child.margin || 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase START:\r\n\t\t\tcase 'left': // @TODO : Deprecated and will be remove upon 7.x.x\r\n\t\t\tcase 'top': // @TODO : Deprecated and will be remove upon 7.x.x\r\n\t\t\t\tif( DIRECTION.indexOf( ROW ) === 0 ){\r\n\r\n\t\t\t\t\toffset = AXIS_TARGET - ( child[getSizeMethod]() / 2 ) - ( child.margin || 0 );\r\n\r\n\t\t\t\t}else{\r\n\r\n\t\t\t\t\toffset = - AXIS_TARGET + ( child[getSizeMethod]() / 2 ) + ( child.margin || 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tboxComponent.childrenPos[ child.id ][axis] = offset || 0;\r\n\r\n\t} );\r\n\r\n}\r\n\r\n/**\r\n * @deprecated\r\n * // @TODO: Be remove upon 7.x.x\r\n * @param alignment\r\n */\r\nfunction warnAboutDeprecatedAlignItems( alignment ){\r\n\r\n\tif( DEPRECATED_ALIGN_ITEMS.indexOf(alignment) !== - 1){\r\n\r\n\t\tconsole.warn(`alignItems === '${alignment}' is deprecated and will be remove in 7.x.x. Fallback are 'start'|'end'`)\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst AVAILABLE_ALIGN_ITEMS = [\r\n\tSTART,\r\n\tCENTER,\r\n\tEND,\r\n\tSTRETCH,\r\n\t'top', // @TODO: Be remove upon 7.x.x\r\n\t'right', // @TODO: Be remove upon 7.x.x\r\n\t'bottom', // @TODO: Be remove upon 7.x.x\r\n\t'left' // @TODO: Be remove upon 7.x.x\r\n];\r\n\r\n// @TODO: Be remove upon 7.x.x\r\nconst DEPRECATED_ALIGN_ITEMS = [\r\n\t'top',\r\n\t'right',\r\n\t'bottom',\r\n\t'left'\r\n];\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/utils/block-layout/JustifyContent.js\r\nconst JustifyContent_START = \"start\";\r\nconst JustifyContent_CENTER = \"center\";\r\nconst JustifyContent_END = \"end\";\r\nconst SPACE_AROUND = 'space-around';\r\nconst SPACE_BETWEEN = 'space-between';\r\nconst SPACE_EVENLY = 'space-evenly';\r\n\r\nfunction justifyContent( boxComponent, direction, startPos, REVERSE){\r\n\r\n\tconst JUSTIFICATION = boxComponent.getJustifyContent();\r\n\tif ( AVAILABLE_JUSTIFICATIONS.indexOf( JUSTIFICATION ) === -1 ) {\r\n\r\n\t\tconsole.warn( `justifyContent === '${ JUSTIFICATION }' is not supported` );\r\n\r\n\t}\r\n\r\n\tconst side = direction.indexOf('row') === 0 ? 'width' : 'height'\r\n\tconst usedDirectionSpace = boxComponent.getChildrenSideSum( side );\r\n\r\n\tconst INNER_SIZE = side === 'width' ? boxComponent.getInnerWidth() : boxComponent.getInnerHeight();\r\n\tconst remainingSpace = INNER_SIZE - usedDirectionSpace;\r\n\r\n\t// Items Offset\r\n\tconst axisOffset = ( startPos * 2 ) - ( usedDirectionSpace * Math.sign( startPos ) );\r\n\t// const axisOffset = ( startPos * 2 ) - ( usedDirectionSpace * REVERSE );\r\n\tconst justificationOffset = _getJustificationOffset( JUSTIFICATION, axisOffset );\r\n\r\n\t// Items margin\r\n\tconst justificationMargins = _getJustificationMargin( boxComponent.childrenBoxes, remainingSpace, JUSTIFICATION, REVERSE );\r\n\r\n\t// Apply\r\n\tconst axis = direction.indexOf( 'row' ) === 0 ? \"x\" : \"y\"\r\n\tboxComponent.childrenBoxes.forEach( ( child , childIndex ) => {\r\n\r\n\t\tboxComponent.childrenPos[ child.id ][axis] -= justificationOffset - justificationMargins[childIndex];\r\n\r\n\t} );\r\n}\r\n\r\nconst AVAILABLE_JUSTIFICATIONS = [\r\n\tJustifyContent_START,\r\n\tJustifyContent_CENTER,\r\n\tJustifyContent_END,\r\n\tSPACE_AROUND,\r\n\tSPACE_BETWEEN,\r\n\tSPACE_EVENLY\r\n];\r\n\r\n/**\r\n *\r\n * @param {string} justification\r\n * @param {number} axisOffset\r\n * @returns {number}\r\n */\r\nfunction _getJustificationOffset( justification, axisOffset ){\r\n\r\n\t// Only end and center have justification offset\r\n\tswitch ( justification ){\r\n\r\n\t\tcase JustifyContent_END:\r\n\t\t\treturn axisOffset;\r\n\r\n\t\tcase JustifyContent_CENTER:\r\n\t\t\treturn axisOffset / 2;\r\n\t}\r\n\r\n\treturn 0;\r\n}\r\n\r\n/**\r\n *\r\n * @param items\r\n * @param spaceToDistribute\r\n * @param justification\r\n * @param reverse\r\n * @returns {any[]}\r\n */\r\nfunction _getJustificationMargin( items, spaceToDistribute, justification, reverse ){\r\n\r\n\tconst justificationMargins = Array( items.length ).fill( 0 );\r\n\r\n\tif ( spaceToDistribute > 0 ) {\r\n\r\n\t\t// Only space-*  have justification margin betweem items\r\n\t\tswitch ( justification ) {\r\n\r\n\t\t\tcase SPACE_BETWEEN:\r\n\t\t\t\t// only one children would act as start\r\n\t\t\t\tif ( items.length > 1 ) {\r\n\r\n\t\t\t\t\tconst margin = spaceToDistribute / ( items.length - 1 ) * reverse;\r\n\t\t\t\t\t// set this margin for any children\r\n\r\n\t\t\t\t\t// except for first child\r\n\t\t\t\t\tjustificationMargins[ 0 ] = 0;\r\n\r\n\t\t\t\t\tfor ( let i = 1; i < items.length; i++ ) {\r\n\r\n\t\t\t\t\t\tjustificationMargins[ i ] = margin * i;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SPACE_EVENLY:\r\n\t\t\t\t// only one children would act as start\r\n\t\t\t\tif ( items.length > 1 ) {\r\n\r\n\t\t\t\t\tconst margin = spaceToDistribute / ( items.length + 1 ) * reverse;\r\n\r\n\t\t\t\t\t// set this margin for any children\r\n\t\t\t\t\tfor ( let i = 0; i < items.length; i++ ) {\r\n\r\n\t\t\t\t\t\tjustificationMargins[ i ] = margin * ( i + 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase SPACE_AROUND:\r\n\t\t\t\t// only one children would act as start\r\n\t\t\t\tif ( items.length > 1 ) {\r\n\r\n\t\t\t\t\tconst margin = spaceToDistribute / ( items.length ) * reverse;\r\n\r\n\t\t\t\t\tconst start = margin / 2;\r\n\t\t\t\t\tjustificationMargins[ 0 ] = start;\r\n\r\n\t\t\t\t\t// set this margin for any children\r\n\t\t\t\t\tfor ( let i = 1; i < items.length; i++ ) {\r\n\r\n\t\t\t\t\t\tjustificationMargins[ i ] = start + margin * i;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn justificationMargins;\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/BoxComponent.js\r\n/**\r\n\r\nJob: Handle everything related to a BoxComponent element dimensioning and positioning\r\n\r\nKnows: Parents and children dimensions and positions\r\n\r\nIt's worth noting that in three-mesh-ui, it's the parent Block that computes\r\nits children position. A Block can only have either only box components (Block)\r\nas children, or only inline components (Text, InlineBlock).\r\n\r\n */\r\n\r\n\r\n\r\n\r\n\r\nfunction BoxComponent( Base ) {\r\n\r\n\treturn class BoxComponent extends Base {\r\n\r\n\t\tconstructor( options ) {\r\n\r\n\t\t\tsuper( options );\r\n\r\n\t\t\tthis.isBoxComponent = true;\r\n\t\t\tthis.childrenPos = {};\r\n\r\n\t\t}\r\n\r\n\r\n\t\t/** Get width of this component minus its padding */\r\n\t\tgetInnerWidth() {\r\n\r\n\t\t\tconst DIRECTION = this.getContentDirection();\r\n\r\n\t\t\tswitch ( DIRECTION ) {\r\n\r\n\t\t\t\tcase 'row' :\r\n\t\t\t\tcase 'row-reverse' :\r\n\t\t\t\t\treturn this.width - ( this.padding * 2 || 0 ) || this.getChildrenSideSum( 'width' );\r\n\r\n\t\t\t\tcase 'column' :\r\n\t\t\t\tcase 'column-reverse' :\r\n\t\t\t\t\treturn this.getHighestChildSizeOn( 'width' );\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tconsole.error( `Invalid contentDirection : ${DIRECTION}` );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/** Get height of this component minus its padding */\r\n\t\tgetInnerHeight() {\r\n\r\n\t\t\tconst DIRECTION = this.getContentDirection();\r\n\r\n\t\t\tswitch ( DIRECTION ) {\r\n\r\n\t\t\t\tcase 'row' :\r\n\t\t\t\tcase 'row-reverse' :\r\n\t\t\t\t\treturn this.getHighestChildSizeOn( 'height' );\r\n\r\n\t\t\t\tcase 'column' :\r\n\t\t\t\tcase 'column-reverse' :\r\n\t\t\t\t\treturn this.height - ( this.padding * 2 || 0 ) || this.getChildrenSideSum( 'height' );\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tconsole.error( `Invalid contentDirection : ${DIRECTION}` );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/** Return the sum of all this component's children sides + their margin */\r\n\t\tgetChildrenSideSum( dimension ) {\r\n\r\n\t\t\treturn this.childrenBoxes.reduce( ( accu, child ) => {\r\n\r\n\t\t\t\tconst margin = ( child.margin * 2 ) || 0;\r\n\r\n\t\t\t\tconst CHILD_SIZE = ( dimension === 'width' ) ?\r\n\t\t\t\t\t( child.getWidth() + margin ) :\r\n\t\t\t\t\t( child.getHeight() + margin );\r\n\r\n\t\t\t\treturn accu + CHILD_SIZE;\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t/** Look in parent record what is the instructed position for this component, then set its position */\r\n\t\tsetPosFromParentRecords() {\r\n\r\n\t\t\tif ( this.parentUI && this.parentUI.childrenPos[ this.id ] ) {\r\n\r\n\t\t\t\tthis.position.x = ( this.parentUI.childrenPos[ this.id ].x );\r\n\t\t\t\tthis.position.y = ( this.parentUI.childrenPos[ this.id ].y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/** Position inner elements according to dimensions and layout parameters. */\r\n\t\tcomputeChildrenPosition() {\r\n\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\t\tconst DIRECTION = this.getContentDirection();\r\n\t\t\t\tlet directionalOffset;\r\n\r\n\t\t\t\tswitch ( DIRECTION ) {\r\n\r\n\t\t\t\t\tcase ROW :\r\n\t\t\t\t\t\tdirectionalOffset = - this.getInnerWidth() / 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase ROW_REVERSE :\r\n\t\t\t\t\t\tdirectionalOffset = this.getInnerWidth() / 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase COLUMN :\r\n\t\t\t\t\t\tdirectionalOffset = this.getInnerHeight() / 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase COLUMN_REVERSE :\r\n\t\t\t\t\t\tdirectionalOffset = - this.getInnerHeight() / 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst REVERSE = - Math.sign( directionalOffset );\r\n\r\n\t\t\t\tcontentDirection(this, DIRECTION, directionalOffset, REVERSE );\r\n\t\t\t\tjustifyContent(this, DIRECTION, directionalOffset, REVERSE );\r\n\t\t\t\talignItems( this, DIRECTION );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the highest linear dimension among all the children of the passed component\r\n\t\t * MARGIN INCLUDED\r\n\t\t */\r\n\t\tgetHighestChildSizeOn( direction ) {\r\n\r\n\t\t\treturn this.childrenBoxes.reduce( ( accu, child ) => {\r\n\r\n\t\t\t\tconst margin = child.margin || 0;\r\n\t\t\t\tconst maxSize = direction === 'width' ?\r\n\t\t\t\t\tchild.getWidth() + ( margin * 2 ) :\r\n\t\t\t\t\tchild.getHeight() + ( margin * 2 );\r\n\r\n\t\t\t\treturn Math.max( accu, maxSize );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get width of this element\r\n\t\t * With padding, without margin\r\n\t\t */\r\n\t\tgetWidth() {\r\n\r\n\r\n\t\t\t// This is for stretch alignment\r\n\t\t\t// @TODO : Conceive a better performant way\r\n\t\t\tif( this.parentUI && this.parentUI.getAlignItems() === 'stretch' ){\r\n\r\n\t\t\t\tif( this.parentUI.getContentDirection().indexOf('column') !== -1 ){\r\n\r\n\t\t\t\t\treturn this.parentUI.getWidth() -  ( this.parentUI.padding * 2 || 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn this.width || this.getInnerWidth() + ( this.padding * 2 || 0 );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Get height of this element\r\n\t\t * With padding, without margin\r\n\t\t */\r\n\t\tgetHeight() {\r\n\r\n\t\t\t// This is for stretch alignment\r\n\t\t\t// @TODO : Conceive a better performant way\r\n\t\t\tif( this.parentUI && this.parentUI.getAlignItems() === 'stretch' ){\r\n\r\n\t\t\t\tif( this.parentUI.getContentDirection().indexOf('row') !== -1 ){\r\n\r\n\t\t\t\t\treturn this.parentUI.getHeight() - ( this.parentUI.padding * 2 || 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.height || this.getInnerHeight() + ( this.padding * 2 || 0 );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/utils/inline-layout/Whitespace.js\r\n/**\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace#whitespace_helper_functions\r\n *\r\n * Throughout, whitespace is defined as one of the characters\r\n *  \"\\t\" TAB \\u0009\r\n *  \"\\n\" LF  \\u000A\r\n *  \"\\r\" CR  \\u000D\r\n *  \" \"  SPC \\u0020\r\n *\r\n * This does not use Javascript's \"\\s\" because that includes non-breaking\r\n * spaces (and also some other characters).\r\n **/\r\nconst WHITE_CHARS = { '\\t': '\\u0009', '\\n': '\\u000A', '\\r': '\\u000D', ' ': '\\u0020' };\r\n\r\nconst NORMAL = 'normal';\r\nconst NOWRAP = 'nowrap';\r\nconst PRE = 'pre';\r\nconst PRE_LINE = 'pre-line';\r\nconst PRE_WRAP = 'pre-wrap';\r\n\r\n/**\r\n * Collapse whitespaces and sequence of whitespaces on string\r\n *\r\n * @param textContent\r\n * @param whiteSpace\r\n * @returns {*}\r\n */\r\nconst collapseWhitespaceOnString = function ( textContent, whiteSpace ) {\r\n\r\n\tswitch ( whiteSpace ) {\r\n\r\n\t\tcase NOWRAP:\r\n\t\tcase NORMAL:\r\n\t\t\t// newlines are treated as other whitespace characters\r\n\t\t\ttextContent = textContent.replace( /\\n/g, ' ' );\r\n\t\t//falls through\r\n\r\n\t\tcase PRE_LINE:\r\n\t\t\t// collapsed white spaces sequences\r\n\t\t\ttextContent = textContent.replace( /[ ]{2,}/g, ' ' );\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\r\n\t}\r\n\r\n\treturn textContent;\r\n\r\n};\r\n\r\n/**\r\n * Get the breakability of a newline character according to white-space property\r\n *\r\n * @param whiteSpace\r\n * @returns {string}\r\n */\r\nconst newlineBreakability = function ( whiteSpace ) {\r\n\r\n\tswitch ( whiteSpace ) {\r\n\r\n\t\tcase PRE:\r\n\t\tcase PRE_WRAP:\r\n\t\tcase PRE_LINE:\r\n\t\t\treturn 'mandatory';\r\n\r\n\t\tcase NOWRAP:\r\n\t\tcase NORMAL:\r\n\t\tdefault:\r\n\t\t// do not automatically break on newline\r\n\r\n\t}\r\n\r\n};\r\n\r\n/**\r\n * Check for breaks in inlines according to whiteSpace value\r\n *\r\n * @param inlines\r\n * @param i\r\n * @param lastInlineOffset\r\n * @param options\r\n * @returns {boolean}\r\n */\r\nconst Whitespace_shouldBreak = function( inlines, i, lastInlineOffset, options){\r\n\tconst inline = inlines[i];\r\n\r\n\tswitch ( options.WHITESPACE ){\r\n\r\n\t\tcase NORMAL:\r\n\t\tcase PRE_LINE:\r\n\t\tcase PRE_WRAP:\r\n\r\n\t\t\t// prevent additional computation if line break is mandatory\r\n\t\t\tif( inline.lineBreak === 'mandatory' ) return true;\r\n\r\n\r\n\t\t\tconst kerning = inline.kerning ? inline.kerning : 0;\r\n\t\t\tconst xoffset = inline.xoffset ? inline.xoffset : 0;\r\n\t\t\tconst xadvance = inline.xadvance ? inline.xadvance : inline.width;\r\n\r\n\t\t\t// prevent additional computation if this character already exceed the available size\r\n\t\t\tif( lastInlineOffset + xadvance + xoffset + kerning > options.INNER_WIDTH ) return true;\r\n\r\n\r\n\t\t\tconst nextBreak = _distanceToNextBreak( inlines, i, options );\r\n\t\t\treturn _shouldFriendlyBreak( inlines[ i - 1 ], lastInlineOffset, nextBreak, options );\r\n\r\n\t\tcase PRE:\r\n\t\t\treturn inline.lineBreak === 'mandatory';\r\n\r\n\t\tcase NOWRAP:\r\n\t\tdefault:\r\n\t\t\treturn false;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Alter a line of inlines according to white-space property\r\n * @param line\r\n * @param {('normal'|'pre-wrap'|'pre-line')} whiteSpace\r\n */\r\nconst collapseWhitespaceOnInlines = function ( line, whiteSpace ) {\r\n\r\n\tconst firstInline = line[ 0 ];\r\n\tconst lastInline = line[ line.length - 1 ];\r\n\r\n\t// @see https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Whitespace\r\n\t//\r\n\t// current implementation is 'pre-line'\r\n\t// if the breaking character is a space, get the previous one\r\n\tswitch ( whiteSpace ) {\r\n\r\n\t\t// trim/collapse first and last whitespace characters of a line\r\n\t\tcase PRE_WRAP:\r\n\t\t\t// only process whiteChars glyphs inlines\r\n\t\t\t// if( firstInline.glyph && whiteChars[firstInline.glyph] && line.length > 1 ){\r\n\t\t\tif ( firstInline.glyph && firstInline.glyph === '\\n' && line.length > 1 ) {\r\n\r\n\t\t\t\t_collapseLeftInlines( [ firstInline ], line[ 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if( lastInline.glyph && whiteChars[lastInline.glyph] && line.length > 1 ){\r\n\t\t\tif ( lastInline.glyph && lastInline.glyph === '\\n' && line.length > 1 ) {\r\n\r\n\t\t\t\t_collapseRightInlines( [ lastInline ], line[ line.length - 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\r\n\t\tcase PRE_LINE:\r\n\t\tcase NOWRAP:\r\n\t\tcase NORMAL:\r\n\t\t\tlet inlinesToCollapse = [];\r\n\t\t\tlet collapsingTarget;\r\n\t\t\t// collect starting whitespaces to collapse\r\n\t\t\tfor ( let i = 0; i < line.length; i++ ) {\r\n\r\n\t\t\t\tconst inline = line[ i ];\r\n\r\n\t\t\t\tif ( inline.glyph && WHITE_CHARS[ inline.glyph ] && line.length > i ) {\r\n\r\n\t\t\t\t\tinlinesToCollapse.push( inline );\r\n\t\t\t\t\tcollapsingTarget = line[ i + 1 ];\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_collapseLeftInlines( inlinesToCollapse, collapsingTarget );\r\n\r\n\r\n\t\t\tinlinesToCollapse = [];\r\n\t\t\tcollapsingTarget = null;\r\n\t\t\t// collect ending whitespace to collapse\r\n\t\t\tfor ( let i = line.length - 1; i > 0; i-- ) {\r\n\r\n\t\t\t\tconst inline = line[ i ];\r\n\t\t\t\tif ( inline.glyph && WHITE_CHARS[ inline.glyph ] && i > 0 ) {\r\n\r\n\t\t\t\t\tinlinesToCollapse.push( inline );\r\n\t\t\t\t\tcollapsingTarget = line[ i - 1 ];\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_collapseRightInlines( inlinesToCollapse, collapsingTarget );\r\n\t\t\tbreak;\r\n\r\n\t\tcase PRE:\r\n\t\t\tbreak;\r\n\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( `whiteSpace: '${whiteSpace}' is not valid` );\r\n\t\t\treturn 0;\r\n\r\n\t}\r\n\r\n\treturn firstInline.offsetX;\r\n\r\n};\r\n\r\n\r\n/***********************************************************************************************************************\r\n * Internal logics\r\n **********************************************************************************************************************/\r\n\r\n\r\n/**\r\n * Visually collapse inlines from right to left ( endtrim )\r\n * @param {Array} inlines\r\n * @param targetInline\r\n * @private\r\n */\r\nfunction _collapseRightInlines( inlines, targetInline ) {\r\n\r\n\tif ( !targetInline ) return;\r\n\r\n\tfor ( let i = 0; i < inlines.length; i++ ) {\r\n\r\n\t\tconst inline = inlines[ i ];\r\n\r\n\t\tinline.width = 0;\r\n\t\tinline.height = 0;\r\n\t\tinline.offsetX = targetInline.offsetX + targetInline.width;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Visually collapse inlines from left to right (starttrim)\r\n * @param {Array} inlines\r\n * @param targetInline\r\n * @private\r\n */\r\nfunction _collapseLeftInlines( inlines, targetInline ) {\r\n\r\n\tif ( !targetInline ) return;\r\n\r\n\tfor ( let i = 0; i < inlines.length; i++ ) {\r\n\r\n\t\tconst inline = inlines[ i ];\r\n\r\n\t\tinline.width = 0;\r\n\t\tinline.height = 0;\r\n\t\tinline.offsetX = targetInline.offsetX;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * get the distance in world coord to the next glyph defined\r\n * as break-line-safe ( like whitespace for instance )\r\n * @private\r\n */\r\nfunction _distanceToNextBreak( inlines, currentIdx, options, accu ) {\r\n\r\n\taccu = accu || 0;\r\n\r\n\t// end of the text\r\n\tif ( !inlines[ currentIdx ] ) return accu;\r\n\r\n\tconst inline = inlines[ currentIdx ];\r\n\tconst kerning = inline.kerning ? inline.kerning : 0;\r\n\tconst xoffset = inline.xoffset ? inline.xoffset : 0;\r\n\tconst xadvance = inline.xadvance ? inline.xadvance : inline.width;\r\n\r\n\t// if inline.lineBreak is set, it is 'mandatory' or 'possible'\r\n\tif ( inline.lineBreak ) return accu + xadvance;\r\n\r\n\t// no line break is possible on this character\r\n\treturn _distanceToNextBreak(\r\n\t\tinlines,\r\n\t\tcurrentIdx + 1,\r\n\t\toptions,\r\n\t\taccu + xadvance + options.LETTERSPACING + xoffset + kerning\r\n\t);\r\n\r\n}\r\n\r\n/**\r\n * Test if we should line break here even if the current glyph is not out of boundary.\r\n * It might be necessary if the last glyph was break-line-friendly (whitespace, hyphen..)\r\n * and the distance to the next friendly glyph is out of boundary.\r\n */\r\nfunction _shouldFriendlyBreak( prevChar, lastInlineOffset, nextBreak, options ) {\r\n\r\n\t// We can't check if last glyph is break-line-friendly it does not exist\r\n\tif ( !prevChar || !prevChar.glyph ) return false;\r\n\r\n\t// Next break-line-friendly glyph is inside boundary\r\n\tif ( lastInlineOffset + nextBreak < options.INNER_WIDTH ) return false;\r\n\r\n\t// Previous glyph was break-line-friendly\r\n\treturn options.BREAKON.indexOf( prevChar.glyph ) > -1;\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/utils/inline-layout/TextAlign.js\r\nconst LEFT = 'left';\r\nconst RIGHT = 'right';\r\nconst TextAlign_CENTER = 'center';\r\nconst JUSTIFY = 'justify';\r\nconst JUSTIFY_LEFT = 'justify-left';\r\nconst JUSTIFY_RIGHT = 'justify-right';\r\nconst JUSTIFY_CENTER = 'justify-center';\r\n\r\nfunction textAlign( lines, ALIGNMENT, INNER_WIDTH ) {\r\n\r\n\t// Start the alignment by sticking to directions : left, right, center\r\n\tfor ( let i = 0; i < lines.length; i++ ) {\r\n\r\n\t\tconst line = lines[ i ];\r\n\r\n\t\t// compute the alignment offset of the line\r\n\t\tconst offsetX = _computeLineOffset( line, ALIGNMENT, INNER_WIDTH, i === lines.length - 1 );\r\n\r\n\t\t// apply the offset to each characters of the line\r\n\t\tfor ( let j = 0; j < line.length; j++ ) {\r\n\r\n\t\t\tline[ j ].offsetX += offsetX;\r\n\r\n\t\t}\r\n\r\n\t\tline.x = offsetX;\r\n\r\n\t}\r\n\r\n\t// last operations for justifications alignments\r\n\tif ( ALIGNMENT.indexOf( JUSTIFY ) === 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < lines.length; i++ ) {\r\n\r\n\t\t\tconst line = lines[ i ];\r\n\r\n\r\n\t\t\t// do not process last line for justify-left or justify-right\r\n\t\t\tif ( ALIGNMENT.indexOf( '-' ) !== -1 && i === lines.length - 1 ) return;\r\n\r\n\t\t\t// can only justify is space is remaining\r\n\t\t\tconst REMAINING_SPACE = INNER_WIDTH - line.width;\r\n\t\t\tif ( REMAINING_SPACE <= 0 ) return;\r\n\r\n\t\t\t// count the valid spaces to extend\r\n\t\t\t// Do not take the first nor the last space into account\r\n\t\t\tlet validSpaces = 0;\r\n\t\t\tfor ( let j = 1; j < line.length - 1; j++ ) {\r\n\r\n\t\t\t\tvalidSpaces += line[ j ].glyph === ' ' ? 1 : 0;\r\n\r\n\t\t\t}\r\n\t\t\tconst additionalSpace = REMAINING_SPACE / validSpaces;\r\n\r\n\r\n\t\t\t// for right justification, process the loop in reverse\r\n\t\t\tlet inverter = 1;\r\n\t\t\tif ( ALIGNMENT === JUSTIFY_RIGHT ) {\r\n\r\n\t\t\t\tline.reverse();\r\n\t\t\t\tinverter = -1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet incrementalOffsetX = 0;\r\n\r\n\t\t\t// start at ONE to avoid first space\r\n\t\t\tfor ( let j = 1; j <= line.length - 1; j++ ) {\r\n\r\n\t\t\t\t// apply offset on each char\r\n\t\t\t\tconst char = line[ j ];\r\n\t\t\t\tchar.offsetX += incrementalOffsetX * inverter;\r\n\r\n\t\t\t\t// and increase it when space\r\n\t\t\t\tincrementalOffsetX += char.glyph === ' ' ? additionalSpace : 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// for right justification, the loop was processed in reverse\r\n\t\t\tif ( ALIGNMENT === JUSTIFY_RIGHT ) {\r\n\t\t\t\tline.reverse();\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nconst _computeLineOffset = ( line, ALIGNMENT, INNER_WIDTH, lastLine ) => {\r\n\r\n\tswitch ( ALIGNMENT ) {\r\n\r\n\t\tcase JUSTIFY_LEFT:\r\n\t\tcase JUSTIFY:\r\n\t\tcase LEFT:\r\n\t\t\treturn -INNER_WIDTH / 2;\r\n\r\n\t\tcase JUSTIFY_RIGHT:\r\n\t\tcase RIGHT:\r\n\t\t\treturn -line.width + ( INNER_WIDTH / 2 );\r\n\r\n\r\n\t\tcase TextAlign_CENTER:\r\n\t\t\treturn -line.width / 2;\r\n\r\n\t\tcase JUSTIFY_CENTER:\r\n\t\t\tif ( lastLine ) {\r\n\r\n\t\t\t\t// center alignement\r\n\t\t\t\treturn -line.width / 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t\t// left alignment\r\n\t\t\t\treturn -INNER_WIDTH / 2;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( `textAlign: '${ALIGNMENT}' is not valid` );\r\n\r\n\t}\r\n\r\n};\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/InlineManager.js\r\n/**\r\n\r\nJob: Positioning inline elements according to their dimensions inside this component\r\n\r\nKnows: This component dimensions, and its children dimensions\r\n\r\nThis module is used for Block composition (Object.assign). A Block is responsible\r\nfor the positioning of its inline elements. In order for it to know what is the\r\nsize of these inline components, parseParams must be called on its children first.\r\n\r\nIt's worth noting that a Text is not positioned as a whole, but letter per letter,\r\nin order to create a line break when necessary. It's Text that merge the various letters\r\nin its own updateLayout function.\r\n\r\n */\r\n\r\n\r\n\r\nfunction InlineManager( Base ) {\r\n\r\n\treturn class InlineManager extends Base {\r\n\r\n\t\t/** Compute children .inlines objects position, according to their pre-computed dimensions */\r\n\t\tcomputeInlinesPosition() {\r\n\r\n\t\t\t// computed by BoxComponent\r\n\t\t\tconst INNER_WIDTH = this.getWidth() - ( this.padding * 2 || 0 );\r\n\t\t\tconst INNER_HEIGHT = this.getHeight() - ( this.padding * 2 || 0 );\r\n\r\n\t\t\t// got by MeshUIComponent\r\n\t\t\tconst JUSTIFICATION = this.getJustifyContent();\r\n\t\t\tconst ALIGNMENT = this.getTextAlign();\r\n\r\n\t\t\tconst INTERLINE = this.getInterLine();\r\n\r\n\t\t\t// Compute lines\r\n\t\t\tconst lines = this.computeLines();\r\n\t\t\tlines.interLine = INTERLINE;\r\n\r\n\t\t\t/////////////////////////////////////////////////////////////////\r\n\t\t\t// Position lines according to justifyContent and contentAlign\r\n\t\t\t/////////////////////////////////////////////////////////////////\r\n\r\n\t\t\tconst textHeight = Math.abs( lines.height );\r\n\r\n\t\t\t// Line vertical positioning\r\n\r\n\t\t\tconst justificationOffset = ( () => {\r\n\t\t\t\tswitch ( JUSTIFICATION ) {\r\n\r\n\t\t\t\t\tcase 'start':\r\n\t\t\t\t\t\treturn (INNER_HEIGHT/2);\r\n\r\n\t\t\t\t\tcase 'end':\r\n\t\t\t\t\t\treturn textHeight - ( INNER_HEIGHT / 2 );\r\n\r\n\t\t\t\t\tcase 'center':\r\n\t\t\t\t\t\treturn ( textHeight / 2 );\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( `justifyContent: '${JUSTIFICATION}' is not valid` );\r\n\r\n\t\t\t\t}\r\n\t\t\t} )();\r\n\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlines.forEach( ( line ) => {\r\n\r\n\t\t\t\tline.y += justificationOffset;\r\n\r\n\t\t\t\tline.forEach( ( inline ) => {\r\n\r\n\t\t\t\t\tinline.offsetY += justificationOffset;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\t// Horizontal positioning\r\n\t\t\ttextAlign( lines, ALIGNMENT, INNER_WIDTH );\r\n\r\n\r\n\t\t\t// Make lines accessible to provide helpful informations\r\n\t\t\tthis.lines = lines;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tcalculateBestFit( bestFit ) {\r\n\r\n\t\t\tif ( this.childrenInlines.length === 0 ) return;\r\n\r\n\t\t\tswitch ( bestFit ) {\r\n\t\t\t\tcase 'grow':\r\n\t\t\t\t\tthis.calculateGrowFit();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'shrink':\r\n\t\t\t\t\tthis.calculateShrinkFit();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'auto':\r\n\t\t\t\t\tthis.calculateAutoFit();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcalculateGrowFit() {\r\n\r\n\t\t\tconst INNER_HEIGHT = this.getHeight() - ( this.padding * 2 || 0 );\r\n\r\n\t\t\t//Iterative method to find a fontSize of text children that text will fit into container\r\n\t\t\tlet iterations = 1;\r\n\t\t\tconst heightTolerance = 0.075;\r\n\t\t\tconst firstText = this.childrenInlines.find( inlineComponent => inlineComponent.isText );\r\n\r\n\t\t\tlet minFontMultiplier = 1;\r\n\t\t\tlet maxFontMultiplier = 2;\r\n\t\t\tlet fontMultiplier = firstText._fitFontSize ? firstText._fitFontSize / firstText.getFontSize() : 1;\r\n\t\t\tlet textHeight;\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\ttextHeight = this.calculateHeight( fontMultiplier );\r\n\r\n\t\t\t\tif ( textHeight > INNER_HEIGHT ) {\r\n\r\n\t\t\t\t\tif ( fontMultiplier <= minFontMultiplier ) { // can't shrink text\r\n\r\n\t\t\t\t\t\tthis.childrenInlines.forEach( inlineComponent => {\r\n\r\n\t\t\t\t\t\t\tif ( inlineComponent.isInlineBlock ) return;\r\n\r\n\t\t\t\t\t\t\t// ensure fontSize does not shrink\r\n\t\t\t\t\t\t\tinlineComponent._fitFontSize = inlineComponent.getFontSize();\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmaxFontMultiplier = fontMultiplier;\r\n\t\t\t\t\tfontMultiplier -= ( maxFontMultiplier - minFontMultiplier ) / 2;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.abs( INNER_HEIGHT - textHeight ) < heightTolerance ) break;\r\n\r\n\t\t\t\t\tif ( Math.abs( fontMultiplier - maxFontMultiplier ) < 5e-10 ) maxFontMultiplier *= 2;\r\n\r\n\t\t\t\t\tminFontMultiplier = fontMultiplier;\r\n\t\t\t\t\tfontMultiplier += ( maxFontMultiplier - minFontMultiplier ) / 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} while ( ++iterations <= 10 );\r\n\r\n\t\t}\r\n\r\n\t\tcalculateShrinkFit() {\r\n\r\n\t\t\tconst INNER_HEIGHT = this.getHeight() - ( this.padding * 2 || 0 );\r\n\r\n\t\t\t// Iterative method to find a fontSize of text children that text will fit into container\r\n\t\t\tlet iterations = 1;\r\n\t\t\tconst heightTolerance = 0.075;\r\n\t\t\tconst firstText = this.childrenInlines.find( inlineComponent => inlineComponent.isText );\r\n\r\n\t\t\tlet minFontMultiplier = 0;\r\n\t\t\tlet maxFontMultiplier = 1;\r\n\t\t\tlet fontMultiplier = firstText._fitFontSize ? firstText._fitFontSize / firstText.getFontSize() : 1;\r\n\t\t\tlet textHeight;\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\ttextHeight = this.calculateHeight( fontMultiplier );\r\n\r\n\t\t\t\tif ( textHeight > INNER_HEIGHT ) {\r\n\r\n\t\t\t\t\tmaxFontMultiplier = fontMultiplier;\r\n\t\t\t\t\tfontMultiplier -= ( maxFontMultiplier - minFontMultiplier ) / 2;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( fontMultiplier >= maxFontMultiplier ) { // can't grow text\r\n\r\n\t\t\t\t\t\tthis.childrenInlines.forEach( inlineComponent => {\r\n\r\n\t\t\t\t\t\t\tif ( inlineComponent.isInlineBlock ) return;\r\n\r\n\t\t\t\t\t\t\t// ensure fontSize does not grow\r\n\t\t\t\t\t\t\tinlineComponent._fitFontSize = inlineComponent.getFontSize();\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( Math.abs( INNER_HEIGHT - textHeight ) < heightTolerance ) break;\r\n\r\n\t\t\t\t\tminFontMultiplier = fontMultiplier;\r\n\t\t\t\t\tfontMultiplier += ( maxFontMultiplier - minFontMultiplier ) / 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} while ( ++iterations <= 10 );\r\n\t\t}\r\n\r\n\t\tcalculateAutoFit()  {\r\n\r\n\t\t\tconst INNER_HEIGHT = this.getHeight() - ( this.padding * 2 || 0 );\r\n\r\n\t\t\t//Iterative method to find a fontSize of text children that text will fit into container\r\n\t\t\tlet iterations = 1;\r\n\t\t\tconst heightTolerance = 0.075;\r\n\t\t\tconst firstText = this.childrenInlines.find( inlineComponent => inlineComponent.isText );\r\n\r\n\t\t\tlet minFontMultiplier = 0;\r\n\t\t\tlet maxFontMultiplier = 2;\r\n\t\t\tlet fontMultiplier = firstText._fitFontSize ? firstText._fitFontSize / firstText.getFontSize() : 1;\r\n\t\t\tlet textHeight;\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\ttextHeight = this.calculateHeight( fontMultiplier );\r\n\r\n\t\t\t\tif ( textHeight > INNER_HEIGHT ) {\r\n\r\n\t\t\t\t\tmaxFontMultiplier = fontMultiplier;\r\n\t\t\t\t\tfontMultiplier -= ( maxFontMultiplier - minFontMultiplier ) / 2;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.abs( INNER_HEIGHT - textHeight ) < heightTolerance ) break;\r\n\r\n\t\t\t\t\tif ( Math.abs( fontMultiplier - maxFontMultiplier ) < 5e-10 ) maxFontMultiplier *= 2;\r\n\r\n\t\t\t\t\tminFontMultiplier = fontMultiplier;\r\n\t\t\t\t\tfontMultiplier += ( maxFontMultiplier - minFontMultiplier ) / 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} while ( ++iterations <= 10 );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * computes lines based on children's inlines array.\r\n\t\t * @private\r\n\t\t */\r\n\t\tcomputeLines() {\r\n\r\n\t\t\t// computed by BoxComponent\r\n\t\t\tconst INNER_WIDTH = this.getWidth() - ( this.padding * 2 || 0 );\r\n\r\n\t\t\t// Will stock the characters of each line, so that we can\r\n\t\t\t// correct lines position before to merge\r\n\t\t\tconst lines = [ [] ];\r\n\t\t\tlines.height = 0;\r\n\r\n\t\t\tconst INTERLINE = this.getInterLine();\r\n\r\n\t\t\tthis.childrenInlines.reduce( ( lastInlineOffset, inlineComponent ) => {\r\n\r\n\t\t\t\t\t// Abort condition\r\n\r\n\t\t\t\t\tif ( !inlineComponent.inlines ) return;\r\n\r\n\t\t\t\t\t//////////////////////////////////////////////////////////////\r\n\t\t\t\t\t// Compute offset of each children according to its dimensions\r\n\t\t\t\t\t//////////////////////////////////////////////////////////////\r\n\r\n\t\t\t\t\tconst FONTSIZE = inlineComponent._fitFontSize || inlineComponent.getFontSize();\r\n\t\t\t\t\tconst LETTERSPACING = inlineComponent.isText ? inlineComponent.getLetterSpacing() * FONTSIZE : 0;\r\n\t\t\t\t\tconst WHITESPACE = inlineComponent.getWhiteSpace();\r\n\t\t\t\t\tconst BREAKON = inlineComponent.getBreakOn();\r\n\r\n\t\t\t\t\tconst whiteSpaceOptions = {\r\n\t\t\t\t\t\tWHITESPACE,\r\n\t\t\t\t\t\tLETTERSPACING,\r\n\t\t\t\t\t\tBREAKON,\r\n\t\t\t\t\t\tINNER_WIDTH\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst currentInlineInfo = inlineComponent.inlines.reduce( ( lastInlineOffset, inline, i, inlines ) => {\r\n\r\n\t\t\t\t\t\tconst kerning = inline.kerning ? inline.kerning : 0;\r\n\t\t\t\t\t\tconst xoffset = inline.xoffset ? inline.xoffset : 0;\r\n\t\t\t\t\t\tconst xadvance = inline.xadvance ? inline.xadvance : inline.width;\r\n\r\n\t\t\t\t\t\t// Line break\r\n\t\t\t\t\t\tconst shouldBreak = Whitespace_shouldBreak(inlines,i,lastInlineOffset, whiteSpaceOptions );\r\n\r\n\t\t\t\t\t\tif ( shouldBreak ) {\r\n\r\n\t\t\t\t\t\t\tlines.push( [ inline ] );\r\n\r\n\t\t\t\t\t\t\tinline.offsetX = xoffset;\r\n\r\n\t\t\t\t\t\t\t// restart the lastInlineOffset as zero.\r\n\t\t\t\t\t\t\tif ( inline.width === 0 ) return 0;\r\n\r\n\t\t\t\t\t\t\t// compute lastInlineOffset normally\r\n\t\t\t\t\t\t\t// except for kerning which won't apply\r\n\t\t\t\t\t\t\t// as there is visually no lefthanded glyph to kern with\r\n\t\t\t\t\t\t\treturn xadvance + LETTERSPACING;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlines[ lines.length - 1 ].push( inline );\r\n\r\n\t\t\t\t\t\tinline.offsetX = lastInlineOffset + xoffset + kerning;\r\n\r\n\t\t\t\t\t\treturn lastInlineOffset + xadvance + kerning + LETTERSPACING;\r\n\r\n\t\t\t\t\t}, lastInlineOffset );\r\n\r\n\t\t\t\t\t//\r\n\r\n\t\t\t\t\treturn currentInlineInfo;\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t// Compute lines dimensions\r\n\r\n\t\t\tlet width = 0, height =0, lineOffsetY = -INTERLINE/2;\r\n\t\t\tlines.forEach( ( line ) => {\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tline.lineHeight = line.reduce( ( height, inline ) => {\r\n\r\n\t\t\t\t\tconst charHeight = inline.lineHeight !== undefined ? inline.lineHeight : inline.height;\r\n\r\n\t\t\t\t\treturn Math.max( height, charHeight );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tline.lineBase = line.reduce( ( lineBase, inline ) => {\r\n\r\n\t\t\t\t\tconst newLineBase = inline.lineBase !== undefined ? inline.lineBase : inline.height;\r\n\r\n\t\t\t\t\treturn Math.max( lineBase, newLineBase );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tline.width = 0;\r\n\t\t\t\tline.height = line.lineHeight;\r\n\t\t\t\tconst lineHasInlines = line[ 0 ];\r\n\r\n\t\t\t\tif ( lineHasInlines ) {\r\n\r\n\t\t\t\t\t// starts by processing whitespace, it will return a collapsed left offset\r\n\t\t\t\t\tconst WHITESPACE = this.getWhiteSpace();\r\n\t\t\t\t\tconst whiteSpaceOffset = collapseWhitespaceOnInlines( line, WHITESPACE );\r\n\r\n\t\t\t\t\t// apply the collapsed left offset to ensure the starting offset is 0\r\n\t\t\t\t\tline.forEach( ( inline ) => {\r\n\r\n\t\t\t\t\t\tinline.offsetX -= whiteSpaceOffset;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t// compute its width: length from firstInline:LEFT to lastInline:RIGHT\r\n\t\t\t\t\tline.width = this.computeLineWidth( line );\r\n\t\t\t\t\tif( line.width > width ){\r\n\t\t\t\t\t\twidth = line.width;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tline.forEach( ( inline ) => {\r\n\r\n\t\t\t\t\t\tinline.offsetY = (lineOffsetY - inline.height) - inline.anchor;\r\n\r\n\t\t\t\t\t\tif( inline.lineHeight < line.lineHeight ){\r\n\t\t\t\t\t\t\tinline.offsetY -= line.lineBase- inline.lineBase;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tline.y = lineOffsetY;\r\n\t\t\t\t\t// line.x will be set by textAlign\r\n\r\n\t\t\t\t\theight += ( line.lineHeight + INTERLINE );\r\n\r\n\t\t\t\t\tlineOffsetY = lineOffsetY - (line.lineHeight + INTERLINE );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tlines.height = height;\r\n\t\t\tlines.width = width;\r\n\r\n\r\n\t\t\treturn lines;\r\n\t\t}\r\n\r\n\t\tcalculateHeight( fontMultiplier ) {\r\n\r\n\t\t\tthis.childrenInlines.forEach( inlineComponent => {\r\n\r\n\t\t\t\tif ( inlineComponent.isInlineBlock ) return;\r\n\r\n\t\t\t\t// Set font size and recalculate dimensions\r\n\t\t\t\tinlineComponent._fitFontSize = inlineComponent.getFontSize() * fontMultiplier;\r\n\t\t\t\tinlineComponent.calculateInlines( inlineComponent._fitFontSize );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tconst lines = this.computeLines();\r\n\t\t\treturn Math.abs( lines.height );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Compute the width of a line\r\n\t\t * @param line\r\n\t\t * @returns {number}\r\n\t\t */\r\n\t\tcomputeLineWidth( line ) {\r\n\r\n\t\t\t// only by the length of its extremities\r\n\t\t\tconst firstInline = line[ 0 ];\r\n\r\n\t\t\tconst lastInline = line[ line.length - 1 ];\r\n\r\n\t\t\t// Right + Left ( left is negative )\r\n\t\t\treturn (lastInline.offsetX + lastInline.width) + firstInline.offsetX;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/FontLibrary.js\r\n/*\r\n\r\nJob:\r\nKeeping record of all the loaded fonts, which component use which font,\r\nand load new fonts if necessary\r\n\r\nKnows: Which component use which font, loaded fonts\r\n\r\nThis is one of the only modules in the 'component' folder that is not used\r\nfor composition (Object.assign). MeshUIComponent is the only module with\r\na reference to it, it uses FontLibrary for recording fonts accross components.\r\nThis way, if a component uses the same font as another, FontLibrary will skip\r\nloading it twice, even if the two component are not in the same parent/child hierarchy\r\n\r\n*/\r\n\r\n\r\n\r\nconst fileLoader = new external_three_namespaceObject.FileLoader();\r\nconst requiredFontFamilies = [];\r\nconst fontFamilies = {};\r\n\r\nconst textureLoader = new external_three_namespaceObject.TextureLoader();\r\nconst requiredFontTextures = [];\r\nconst fontTextures = {};\r\n\r\nconst records = {};\r\n\r\n/**\r\n\r\nCalled by MeshUIComponent after fontFamily was set\r\nWhen done, it calls MeshUIComponent.update, to actually display\r\nthe text with the loaded font.\r\n\r\n */\r\nfunction setFontFamily( component, fontFamily ) {\r\n\r\n\tif ( typeof fontFamily === 'string' ) {\r\n\r\n\t\tloadFontJSON( component, fontFamily );\r\n\r\n\t} else {\r\n\r\n\t\t// keep record of the font that this component use\r\n\t\tif ( !records[ component.id ] ) records[ component.id ] = { component };\r\n\r\n\t\t// Ensure the font json is processed\r\n\t\t_buildFriendlyKerningValues( fontFamily );\r\n\r\n\t\trecords[ component.id ].json = fontFamily;\r\n\r\n\t\tcomponent._updateFontFamily( fontFamily );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n\r\nCalled by MeshUIComponent after fontTexture was set\r\nWhen done, it calls MeshUIComponent.update, to actually display\r\nthe text with the loaded font.\r\n\r\n */\r\nfunction setFontTexture( component, url ) {\r\n\r\n\t// if this font was never asked for, we load it\r\n\tif ( requiredFontTextures.indexOf( url ) === -1 ) {\r\n\r\n\t\trequiredFontTextures.push( url );\r\n\r\n\t\ttextureLoader.load( url, ( texture ) => {\r\n\r\n\t\t\ttexture.generateMipmaps = false;\r\n\t\t\ttexture.minFilter = external_three_namespaceObject.LinearFilter;\r\n\t\t\ttexture.magFilter = external_three_namespaceObject.LinearFilter;\r\n\r\n\t\t\tfontTextures[ url ] = texture;\r\n\r\n\t\t\tfor ( const recordID of Object.keys( records ) ) {\r\n\r\n\t\t\t\tif ( url === records[ recordID ].textureURL ) {\r\n\r\n\t\t\t\t\t// update all the components that were waiting for this font for an update\r\n\t\t\t\t\trecords[ recordID ].component._updateFontTexture( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// keep record of the font that this component use\r\n\tif ( !records[ component.id ] ) records[ component.id ] = { component };\r\n\r\n\trecords[ component.id ].textureURL = url;\r\n\r\n\t// update the component, only if the font is already requested and loaded\r\n\tif ( fontTextures[ url ] ) {\r\n\r\n\t\tcomponent._updateFontTexture( fontTextures[ url ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/** used by Text to know if a warning must be thrown */\r\nfunction getFontOf( component ) {\r\n\r\n\tconst record = records[ component.id ];\r\n\r\n\tif ( !record && component.parentUI ) {\r\n\r\n\t\treturn getFontOf( component.parentUI );\r\n\r\n\t}\r\n\r\n\treturn record;\r\n\r\n}\r\n\r\n/** Load JSON file at the url provided by the user at the component attribute 'fontFamily' */\r\nfunction loadFontJSON( component, url ) {\r\n\r\n\t// if this font was never asked for, we load it\r\n\tif ( requiredFontFamilies.indexOf( url ) === -1 ) {\r\n\r\n\t\trequiredFontFamilies.push( url );\r\n\r\n\t\tfileLoader.load( url, ( text ) => {\r\n\r\n\t\t\t// FileLoader import as  a JSON string\r\n\t\t\tconst font = JSON.parse( text );\r\n\r\n\t\t\t// Ensure the font json is processed\r\n\t\t\t_buildFriendlyKerningValues( font );\r\n\r\n\t\t\tfontFamilies[ url ] = font;\r\n\r\n\t\t\tfor ( const recordID of Object.keys( records ) ) {\r\n\r\n\t\t\t\tif ( url === records[ recordID ].jsonURL ) {\r\n\r\n\t\t\t\t\t// update all the components that were waiting for this font for an update\r\n\t\t\t\t\trecords[ recordID ].component._updateFontFamily( font );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t// keep record of the font that this component use\r\n\tif ( !records[ component.id ] ) records[ component.id ] = { component };\r\n\r\n\trecords[ component.id ].jsonURL = url;\r\n\r\n\t// update the component, only if the font is already requested and loaded\r\n\tif ( fontFamilies[ url ] ) {\r\n\r\n\t\tcomponent._updateFontFamily( fontFamilies[ url ] );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * From the original json font kernings array\r\n * First  : Reduce the number of values by ignoring any kerning defining an amount of 0\r\n * Second : Update the data structure of kernings from\r\n * \t\t\t{Array} : [{first: 97, second: 121, amount: 0},{first: 97, second: 122, amount: -1},...]\r\n * \t\t\tto\r\n * \t\t\t{Object}: {\"ij\":-2,\"WA\":-3,...}}\r\n *\r\n * @private\r\n */\r\nfunction _buildFriendlyKerningValues( font ) {\r\n\r\n\t// As \"font registering\" can comes from different paths : addFont, loadFontJSON, setFontFamily\r\n\t// Be sure we don't repeat this operation\r\n\tif ( font._kernings ) return;\r\n\r\n\tconst friendlyKernings = {};\r\n\r\n\tfor ( let i = 0; i < font.kernings.length; i++ ) {\r\n\r\n\t\tconst kerning = font.kernings[ i ];\r\n\r\n\t\t// ignore zero kerned glyph pair\r\n\t\tif ( kerning.amount === 0 ) continue;\r\n\r\n\t\t// Build and store the glyph paired characters \"ij\",\"WA\", ... as keys, referecing their kerning amount\r\n\t\tconst glyphPair = String.fromCharCode( kerning.first, kerning.second );\r\n\t\tfriendlyKernings[ glyphPair ] = kerning.amount;\r\n\r\n\t}\r\n\r\n\t// update the font to keep it\r\n\tfont._kernings = friendlyKernings;\r\n\r\n}\r\n\r\n/*\r\n\r\nThis method is intended for adding manually loaded fonts. Method assumes font hasn't been loaded or requested yet. If it was,\r\nfont with specified name will be overwritten, but components using it won't be updated.\r\n\r\n*/\r\nfunction addFont( name, json, texture ) {\r\n\r\n\ttexture.generateMipmaps = false;\r\n\ttexture.minFilter = external_three_namespaceObject.LinearFilter;\r\n\ttexture.magFilter = external_three_namespaceObject.LinearFilter;\r\n\r\n\trequiredFontFamilies.push( name );\r\n\tfontFamilies[ name ] = json;\r\n\r\n\t// Ensure the font json is processed\r\n\t_buildFriendlyKerningValues( json );\r\n\r\n\tif ( texture ) {\r\n\t\trequiredFontTextures.push( name );\r\n\t\tfontTextures[ name ] = texture;\r\n\t}\r\n}\r\n\r\n//\r\n\r\nconst FontLibrary = {\r\n\tsetFontFamily,\r\n\tsetFontTexture,\r\n\tgetFontOf,\r\n\taddFont\r\n};\r\n\r\n/* harmony default export */ const core_FontLibrary = (FontLibrary);\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/UpdateManager.js\r\n/**\r\n * Job:\r\n * - recording components required updates\r\n * - trigger those updates when 'update' is called\r\n *\r\n * This module is a bit special. It is, with FontLibrary, one of the only modules in the 'component'\r\n * directory not to be used in component composition (Object.assign).\r\n *\r\n * When MeshUIComponent is instanciated, it calls UpdateManager.register().\r\n *\r\n * Then when MeshUIComponent receives new attributes, it doesn't update the component right away.\r\n * Instead, it calls UpdateManager.requestUpdate(), so that the component is updated when the user\r\n * decides it (usually in the render loop).\r\n *\r\n * This is best for performance, because when a UI is created, thousands of componants can\r\n * potentially be instantiated. If they called updates function on their ancestors right away,\r\n * a given component could be updated thousands of times in one frame, which is very ineficient.\r\n *\r\n * Instead, redundant update request are moot, the component will update once when the use calls\r\n * update() in their render loop.\r\n */\r\nclass UpdateManager {\r\n\r\n\t/*\r\n\t * get called by MeshUIComponent when component.set has been used.\r\n\t * It registers this component and all its descendants for the different types of updates that were required.\r\n\t */\r\n\tstatic requestUpdate( component, updateParsing, updateLayout, updateInner ) {\r\n\r\n\t\tcomponent.traverse( ( child ) => {\r\n\r\n\t\t\tif ( !child.isUI ) return;\r\n\r\n\t\t\t// request updates for all descendants of the passed components\r\n\t\t\tif ( !this.requestedUpdates[ child.id ] ) {\r\n\r\n\t\t\t\tthis.requestedUpdates[ child.id ] = {\r\n\t\t\t\t\tupdateParsing,\r\n\t\t\t\t\tupdateLayout,\r\n\t\t\t\t\tupdateInner,\r\n\t\t\t\t\tneedCallback: ( updateParsing || updateLayout || updateInner )\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( updateParsing ) this.requestedUpdates[ child.id ].updateParsing = true;\r\n\t\t\t\tif ( updateLayout ) this.requestedUpdates[ child.id ].updateLayout = true;\r\n\t\t\t\tif ( updateInner ) this.requestedUpdates[ child.id ].updateInner = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/** Register a passed component for later updates */\r\n\tstatic register( component ) {\r\n\r\n\t\tif ( !this.components.includes( component ) ) {\r\n\r\n\t\t\tthis.components.push( component );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/** Unregister a component (when it's deleted for instance) */\r\n\tstatic disposeOf( component ) {\r\n\r\n\t\tconst idx = this.components.indexOf( component );\r\n\r\n\t\tif ( idx > -1 ) {\r\n\r\n\t\t\tthis.components.splice( idx, 1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/** Trigger all requested updates of registered components */\r\n\tstatic update() {\r\n\r\n\t\tif ( Object.keys( this.requestedUpdates ).length > 0 ) {\r\n\r\n\t\t\tconst roots = this.components.filter( ( component ) => {\r\n\r\n\t\t\t\treturn !component.parentUI;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\troots.forEach( root => this.traverseParsing( root ) );\r\n\t\t\troots.forEach( root => this.traverseUpdates( root ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calls parseParams update of all components from parent to children\r\n\t * @private\r\n\t */\r\n\tstatic traverseParsing( component ) {\r\n\r\n\t\tconst request = this.requestedUpdates[ component.id ];\r\n\r\n\t\tif ( request && request.updateParsing ) {\r\n\r\n\t\t\tcomponent.parseParams();\r\n\r\n\t\t\trequest.updateParsing = false;\r\n\r\n\t\t}\r\n\r\n\t\tcomponent.childrenUIs.forEach( child => this.traverseParsing( child ) );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calls updateLayout and updateInner functions of components that need an update\r\n\t * @private\r\n\t */\r\n\tstatic traverseUpdates( component ) {\r\n\r\n\t\tconst request = this.requestedUpdates[ component.id ];\r\n\t\t// instant remove the requested update,\r\n\t\t// allowing code below ( especially onAfterUpdate ) to add it without being directly remove\r\n\t\tdelete this.requestedUpdates[ component.id ];\r\n\r\n\t\t//\r\n\r\n\t\tif ( request && request.updateLayout ) {\r\n\r\n\t\t\trequest.updateLayout = false;\r\n\r\n\t\t\tcomponent.updateLayout();\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( request && request.updateInner ) {\r\n\r\n\t\t\trequest.updateInner = false;\r\n\r\n\t\t\tcomponent.updateInner();\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// Update any child\r\n\t\tcomponent.childrenUIs.forEach( ( childUI ) => {\r\n\r\n\t\t\tthis.traverseUpdates( childUI );\r\n\r\n\t\t} );\r\n\r\n\t\t// before sending onAfterUpdate\r\n\t\tif ( request && request.needCallback ) {\r\n\r\n\t\t\tcomponent.onAfterUpdate();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// TODO move these into the class (Webpack unfortunately doesn't understand\r\n// `static` property syntax, despite browsers already supporting this)\r\nUpdateManager.components = [];\r\nUpdateManager.requestedUpdates = {};\r\n\r\n;// CONCATENATED MODULE: ./src/utils/Defaults.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/** List the default values of the lib components */\r\n/* harmony default export */ const Defaults = ({\r\n\tcontainer: null,\r\n\tfontFamily: null,\r\n\tfontSize: 0.05,\r\n\tfontKerning: 'normal', // FontKerning would act like css : \"none\"|\"normal\"|\"auto\"(\"auto\" not yet implemented)\r\n\tbestFit: 'none',\r\n\toffset: 0.01,\r\n\tinterLine: 0.01,\r\n\tbreakOn: '- ,.:?!\\n',// added '\\n' to also acts as friendly breaks when white-space:normal\r\n\twhiteSpace: PRE_LINE,\r\n\tcontentDirection: COLUMN,\r\n\talignItems: CENTER,\r\n\tjustifyContent: JustifyContent_START,\r\n\ttextAlign: TextAlign_CENTER,\r\n\ttextType: 'MSDF',\r\n\tfontColor: new external_three_namespaceObject.Color( 0xffffff ),\r\n\tfontOpacity: 1,\r\n\tfontPXRange: 4,\r\n\tfontSupersampling: true,\r\n\tborderRadius: 0.01,\r\n\tborderWidth: 0,\r\n\tborderColor: new external_three_namespaceObject.Color( 'black' ),\r\n\tborderOpacity: 1,\r\n\tbackgroundSize: \"cover\",\r\n\tbackgroundColor: new external_three_namespaceObject.Color( 0x222222 ),\r\n\tbackgroundWhiteColor: new external_three_namespaceObject.Color( 0xffffff ),\r\n\tbackgroundOpacity: 0.8,\r\n\tbackgroundOpaqueOpacity: 1.0,\r\n\t// this default value is a function to avoid initialization issues (see issue #126)\r\n\tgetDefaultTexture,\r\n\thiddenOverflow: false,\r\n\tletterSpacing: 0\r\n});\r\n\r\n//\r\n\r\nlet defaultTexture;\r\n\r\nfunction getDefaultTexture() {\r\n\r\n\tif ( !defaultTexture ) {\r\n\r\n\t\tconst ctx = document.createElement( 'canvas' ).getContext( '2d' );\r\n\t\tctx.canvas.width = 1;\r\n\t\tctx.canvas.height = 1;\r\n\t\tctx.fillStyle = '#ffffff';\r\n\t\tctx.fillRect( 0, 0, 1, 1 );\r\n\t\tdefaultTexture = new external_three_namespaceObject.CanvasTexture( ctx.canvas );\r\n\t\tdefaultTexture.isDefault = true;\r\n\r\n\t}\r\n\r\n\treturn defaultTexture;\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/MeshUIComponent.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n\r\nJob:\r\n- Set this component attributes and call updates accordingly\r\n- Getting this component attribute, from itself or from its parents\r\n- Managing this component's states\r\n\r\nThis is the core module of three-mesh-ui. Every component is composed with it.\r\nIt owns the principal public methods of a component : set, setupState and setState.\r\n\r\n */\r\nfunction MeshUIComponent( Base ) {\r\n\r\n\treturn class MeshUIComponent extends Base {\r\n\r\n\t\tconstructor( options ) {\r\n\r\n\t\t\tsuper( options );\r\n\r\n\t\t\tthis.states = {};\r\n\t\t\tthis.currentState = undefined;\r\n\t\t\tthis.isUI = true;\r\n\t\t\tthis.autoLayout = true;\r\n\r\n\t\t\t// children\r\n\t\t\tthis.childrenUIs = [];\r\n\t\t\tthis.childrenBoxes = [];\r\n\t\t\tthis.childrenTexts = [];\r\n\t\t\tthis.childrenInlines = [];\r\n\r\n\t\t\t// parents\r\n\t\t\tthis.parentUI = null;\r\n\t\t\t// update parentUI when this component will be added or removed\r\n\t\t\tthis.addEventListener( 'added', this._rebuildParentUI );\r\n\t\t\tthis.addEventListener( 'removed', this._rebuildParentUI );\r\n\t\t}\r\n\r\n\t\t/////////////\r\n\t\t/// GETTERS\r\n\t\t/////////////\r\n\r\n\t\tgetClippingPlanes() {\r\n\r\n\t\t\tconst planes = [];\r\n\r\n\t\t\tif ( this.parentUI ) {\r\n\r\n\t\t\t\tif ( this.isBlock && this.parentUI.getHiddenOverflow() ) {\r\n\r\n\t\t\t\t\tconst yLimit = ( this.parentUI.getHeight() / 2 ) - ( this.parentUI.padding || 0 );\r\n\t\t\t\t\tconst xLimit = ( this.parentUI.getWidth() / 2 ) - ( this.parentUI.padding || 0 );\r\n\r\n\t\t\t\t\tconst newPlanes = [\r\n\t\t\t\t\t\tnew external_three_namespaceObject.Plane( new external_three_namespaceObject.Vector3( 0, 1, 0 ), yLimit ),\r\n\t\t\t\t\t\tnew external_three_namespaceObject.Plane( new external_three_namespaceObject.Vector3( 0, -1, 0 ), yLimit ),\r\n\t\t\t\t\t\tnew external_three_namespaceObject.Plane( new external_three_namespaceObject.Vector3( 1, 0, 0 ), xLimit ),\r\n\t\t\t\t\t\tnew external_three_namespaceObject.Plane( new external_three_namespaceObject.Vector3( -1, 0, 0 ), xLimit )\r\n\t\t\t\t\t];\r\n\r\n\t\t\t\t\tnewPlanes.forEach( plane => {\r\n\r\n\t\t\t\t\t\tplane.applyMatrix4( this.parent.matrixWorld );\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tplanes.push( ...newPlanes );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.parentUI.parentUI ) {\r\n\r\n\t\t\t\t\tplanes.push( ...this.parentUI.getClippingPlanes() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn planes;\r\n\r\n\t\t}\r\n\r\n\t\t/** Get the highest parent of this component (the parent that has no parent on top of it) */\r\n\t\tgetHighestParent() {\r\n\r\n\t\t\tif ( !this.parentUI ) {\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.parent.getHighestParent();\r\n\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * look for a property in this object, and if does not find it, find in parents or return default value\r\n\t\t * @private\r\n\t\t */\r\n\t\t_getProperty( propName ) {\r\n\r\n\t\t\tif ( this[ propName ] === undefined && this.parentUI ) {\r\n\r\n\t\t\t\treturn this.parent._getProperty( propName );\r\n\r\n\t\t\t} else if ( this[ propName ] !== undefined ) {\r\n\r\n\t\t\t\treturn this[ propName ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Defaults[ propName ];\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tgetFontSize() {\r\n\r\n\t\t\treturn this._getProperty( 'fontSize' );\r\n\r\n\t\t}\r\n\r\n\t\tgetFontKerning() {\r\n\r\n\t\t\treturn this._getProperty( 'fontKerning' );\r\n\r\n\t\t}\r\n\r\n\t\tgetLetterSpacing() {\r\n\r\n\t\t\treturn this._getProperty( 'letterSpacing' );\r\n\r\n\t\t}\r\n\r\n\t\tgetFontTexture() {\r\n\r\n\t\t\tif ( this[ 'fontTexture' ] === undefined && this.parentUI ) {\r\n\r\n\t\t\t\treturn this.parent._getProperty( 'fontTexture' );\r\n\r\n\t\t\t} else if ( this[ 'fontTexture' ] !== undefined ) {\r\n\r\n\t\t\t\treturn this[ 'fontTexture' ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Defaults.getDefaultTexture();\r\n\r\n\t\t}\r\n\r\n\t\tgetFontFamily() {\r\n\r\n\t\t\treturn this._getProperty( 'fontFamily' );\r\n\r\n\t\t}\r\n\r\n\t\tgetBreakOn() {\r\n\r\n\t\t\treturn this._getProperty( 'breakOn' );\r\n\r\n\t\t}\r\n\r\n\t\tgetWhiteSpace() {\r\n\r\n\t\t\treturn this._getProperty( 'whiteSpace' );\r\n\r\n\t\t}\r\n\r\n\t\tgetTextAlign() {\r\n\r\n\t\t\treturn this._getProperty( 'textAlign' );\r\n\r\n\t\t}\r\n\r\n\t\tgetTextType() {\r\n\r\n\t\t\treturn this._getProperty( 'textType' );\r\n\r\n\t\t}\r\n\r\n\t\tgetFontColor() {\r\n\r\n\t\t\treturn this._getProperty( 'fontColor' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\tgetFontSupersampling() {\r\n\r\n\t\t\treturn this._getProperty( 'fontSupersampling' );\r\n\r\n\t\t}\r\n\r\n\t\tgetFontOpacity() {\r\n\r\n\t\t\treturn this._getProperty( 'fontOpacity' );\r\n\r\n\t\t}\r\n\r\n\t\tgetFontPXRange() {\r\n\r\n\t\t\treturn this._getProperty( 'fontPXRange' );\r\n\r\n\t\t}\r\n\r\n\t\tgetBorderRadius() {\r\n\r\n\t\t\treturn this._getProperty( 'borderRadius' );\r\n\r\n\t\t}\r\n\r\n\t\tgetBorderWidth() {\r\n\r\n\t\t\treturn this._getProperty( 'borderWidth' );\r\n\r\n\t\t}\r\n\r\n\t\tgetBorderColor() {\r\n\r\n\t\t\treturn this._getProperty( 'borderColor' );\r\n\r\n\t\t}\r\n\r\n\t\tgetBorderOpacity() {\r\n\r\n\t\t\treturn this._getProperty( 'borderOpacity' );\r\n\r\n\t\t}\r\n\r\n\t\t/// SPECIALS\r\n\r\n\t\t/** return the first parent with a 'threeOBJ' property */\r\n\t\tgetContainer() {\r\n\r\n\t\t\tif ( !this.threeOBJ && this.parent ) {\r\n\r\n\t\t\t\treturn this.parent.getContainer();\r\n\r\n\t\t\t} else if ( this.threeOBJ ) {\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn Defaults.container;\r\n\r\n\r\n\t\t}\r\n\r\n\t\t/** Get the number of UI parents above this elements (0 if no parent) */\r\n\t\tgetParentsNumber( i ) {\r\n\r\n\t\t\ti = i || 0;\r\n\r\n\t\t\tif ( this.parentUI ) {\r\n\r\n\t\t\t\treturn this.parentUI.getParentsNumber( i + 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn i;\r\n\r\n\t\t}\r\n\r\n\t\t////////////////////////////////////\r\n\t\t/// GETTERS WITH NO PARENTS LOOKUP\r\n\t\t////////////////////////////////////\r\n\r\n\t\tgetBackgroundOpacity() {\r\n\r\n\t\t\treturn ( !this.backgroundOpacity && this.backgroundOpacity !== 0 ) ?\r\n\t\t\t\tDefaults.backgroundOpacity : this.backgroundOpacity;\r\n\r\n\t\t}\r\n\r\n\t\tgetBackgroundColor() {\r\n\r\n\t\t\treturn this.backgroundColor || Defaults.backgroundColor;\r\n\r\n\t\t}\r\n\r\n\t\tgetBackgroundTexture() {\r\n\r\n\t\t\treturn this.backgroundTexture || Defaults.getDefaultTexture();\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @deprecated\r\n\t\t * @returns {string}\r\n\t\t */\r\n\t\tgetAlignContent() {\r\n\r\n\t\t\treturn this.alignContent || Defaults.alignContent;\r\n\r\n\t\t}\r\n\r\n\t\tgetAlignItems() {\r\n\r\n\t\t\treturn this.alignItems || Defaults.alignItems;\r\n\r\n\t\t}\r\n\r\n\t\tgetContentDirection() {\r\n\r\n\t\t\treturn this.contentDirection || Defaults.contentDirection;\r\n\r\n\t\t}\r\n\r\n\t\tgetJustifyContent() {\r\n\r\n\t\t\treturn this.justifyContent || Defaults.justifyContent;\r\n\r\n\t\t}\r\n\r\n\t\tgetInterLine() {\r\n\r\n\t\t\treturn ( this.interLine === undefined ) ? Defaults.interLine : this.interLine;\r\n\r\n\t\t}\r\n\r\n\t\tgetOffset() {\r\n\r\n\t\t\treturn ( this.offset === undefined ) ? Defaults.offset : this.offset;\r\n\r\n\t\t}\r\n\r\n\t\tgetBackgroundSize() {\r\n\r\n\t\t\treturn ( this.backgroundSize === undefined ) ? Defaults.backgroundSize : this.backgroundSize;\r\n\r\n\t\t}\r\n\r\n\t\tgetHiddenOverflow() {\r\n\r\n\t\t\treturn ( this.hiddenOverflow === undefined ) ? Defaults.hiddenOverflow : this.hiddenOverflow;\r\n\r\n\t\t}\r\n\r\n\t\tgetBestFit() {\r\n\r\n\t\t\treturn ( this.bestFit === undefined ) ? Defaults.bestFit : this.bestFit;\r\n\r\n\t\t}\r\n\r\n\t\t///////////////\r\n\t\t///  UPDATE\r\n\t\t///////////////\r\n\r\n\t\t/**\r\n\t\t * Filters children in order to compute only one times children lists\r\n\t\t * @private\r\n\t\t */\r\n\t\t_rebuildChildrenLists() {\r\n\r\n\t\t\t// Stores all children that are ui\r\n\t\t\tthis.childrenUIs = this.children.filter( child => child.isUI );\r\n\r\n\t\t\t// Stores all children that are box\r\n\t\t\tthis.childrenBoxes = this.children.filter( child => child.isBoxComponent );\r\n\r\n\t\t\t// Stores all children that are inline\r\n\t\t\tthis.childrenInlines = this.children.filter( child => child.isInline );\r\n\r\n\t\t\t// Stores all children that are text\r\n\t\t\tthis.childrenTexts = this.children.filter( child => child.isText );\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Try to retrieve parentUI after each structural change\r\n\t\t * @private\r\n\t\t */\r\n\t\t_rebuildParentUI = ( ) => {\r\n\r\n\t\t\tif ( this.parent && this.parent.isUI ) {\r\n\r\n\t\t\t\tthis.parentUI = this.parent;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.parentUI = null;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * When the user calls component.add, it registers for updates,\r\n\t\t * then call THREE.Object3D.add.\r\n\t\t */\r\n\t\tadd() {\r\n\r\n\t\t\tfor ( const id of Object.keys( arguments ) ) {\r\n\r\n\t\t\t\t// An inline component relies on its parent for positioning\r\n\t\t\t\tif ( arguments[ id ].isInline ) this.update( null, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst result = super.add( ...arguments );\r\n\r\n\t\t\tthis._rebuildChildrenLists();\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * When the user calls component.remove, it registers for updates,\r\n\t\t * then call THREE.Object3D.remove.\r\n\t\t */\r\n\t\tremove() {\r\n\r\n\t\t\tfor ( const id of Object.keys( arguments ) ) {\r\n\r\n\t\t\t\t// An inline component relies on its parent for positioning\r\n\t\t\t\tif ( arguments[ id ].isInline ) this.update( null, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst result = super.remove( ...arguments );\r\n\r\n\t\t\tthis._rebuildChildrenLists();\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tupdate( updateParsing, updateLayout, updateInner ) {\r\n\r\n\t\t\tUpdateManager.requestUpdate( this, updateParsing, updateLayout, updateInner );\r\n\r\n\t\t}\r\n\r\n\t\tonAfterUpdate() {\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called by FontLibrary when the font requested for the current component is ready.\r\n\t\t * Trigger an update for the component whose font is now available.\r\n\t\t * @private - \"package protected\"\r\n\t\t */\r\n\t\t_updateFontFamily( font ) {\r\n\r\n\t\t\tthis.fontFamily = font;\r\n\r\n\t\t\tthis.traverse( ( child ) => {\r\n\r\n\t\t\t\tif ( child.isUI ) child.update( true, true, false );\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tthis.getHighestParent().update( false, true, false );\r\n\r\n\t\t}\r\n\r\n\t\t/** @private - \"package protected\" */\r\n\t\t_updateFontTexture( texture ) {\r\n\r\n\t\t\tthis.fontTexture = texture;\r\n\r\n\t\t\tthis.getHighestParent().update( false, true, false );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Set this component's passed parameters.\r\n\t\t * If necessary, take special actions.\r\n\t\t * Update this component unless otherwise specified.\r\n\t\t */\r\n\t\tset( options ) {\r\n\r\n\t\t\tlet parsingNeedsUpdate, layoutNeedsUpdate, innerNeedsUpdate;\r\n\r\n\t\t\t// Register to the update manager, so that it knows when to update\r\n\r\n\t\t\tUpdateManager.register( this );\r\n\r\n\t\t\t// Abort if no option passed\r\n\r\n\t\t\tif ( !options || JSON.stringify( options ) === JSON.stringify( {} ) ) return;\r\n\r\n\t\t\t// DEPRECATION Warnings until -------------------------------------- 7.x.x ---------------------------------------\r\n\r\n\t\t\t// Align content has been removed\r\n\t\t\tif( options[\"alignContent\"] ){\r\n\r\n\t\t\t\toptions[\"alignItems\"] = options[\"alignContent\"];\r\n\r\n\t\t\t\tif( !options[\"textAlign\"] ){\r\n\r\n\t\t\t\t\toptions[\"textAlign\"] = options[\"alignContent\"];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.warn(\"`alignContent` property has been deprecated, please rely on `alignItems` and `textAlign` instead.\")\r\n\r\n\t\t\t\tdelete options[\"alignContent\"];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Align items left top bottom right will be removed\r\n\t\t\tif( options['alignItems'] ){\r\n\r\n\t\t\t\twarnAboutDeprecatedAlignItems( options['alignItems'] );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Set this component parameters according to options, and trigger updates accordingly\r\n\t\t\t// The benefit of having two types of updates, is to put everthing that takes time\r\n\t\t\t// in one batch, and the rest in the other. This way, efficient animation is possible with\r\n\t\t\t// attribute from the light batch.\r\n\r\n\t\t\tfor ( const prop of Object.keys( options ) ) {\r\n\r\n\t\t\t\tif ( this[ prop ] != options[ prop ] ) {\r\n\r\n\t\t\t\t\tswitch ( prop ) {\r\n\r\n\t\t\t\t\t\tcase 'content' :\r\n\t\t\t\t\t\tcase 'fontSize' :\r\n\t\t\t\t\t\tcase 'fontKerning' :\r\n\t\t\t\t\t\tcase 'breakOn':\r\n\t\t\t\t\t\tcase 'whiteSpace':\r\n\t\t\t\t\t\t\tif ( this.isText ) parsingNeedsUpdate = true;\r\n\t\t\t\t\t\t\tlayoutNeedsUpdate = true;\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'bestFit' :\r\n\t\t\t\t\t\t\tif ( this.isBlock ) {\r\n\t\t\t\t\t\t\t\tparsingNeedsUpdate = true;\r\n\t\t\t\t\t\t\t\tlayoutNeedsUpdate = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'width' :\r\n\t\t\t\t\t\tcase 'height' :\r\n\t\t\t\t\t\tcase 'padding' :\r\n\t\t\t\t\t\t\tif ( this.isInlineBlock || ( this.isBlock && this.getBestFit() != 'none' ) ) parsingNeedsUpdate = true;\r\n\t\t\t\t\t\t\tlayoutNeedsUpdate = true;\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'letterSpacing' :\r\n\t\t\t\t\t\tcase 'interLine' :\r\n\t\t\t\t\t\t\tif ( this.isBlock && this.getBestFit() != 'none' ) parsingNeedsUpdate = true;\r\n\t\t\t\t\t\t\tlayoutNeedsUpdate = true;\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'margin' :\r\n\t\t\t\t\t\tcase 'contentDirection' :\r\n\t\t\t\t\t\tcase 'justifyContent' :\r\n\t\t\t\t\t\tcase 'alignContent' :\r\n\t\t\t\t\t\tcase 'alignItems' :\r\n\t\t\t\t\t\tcase 'textAlign' :\r\n\t\t\t\t\t\tcase 'textType' :\r\n\t\t\t\t\t\t\tlayoutNeedsUpdate = true;\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'fontColor' :\r\n\t\t\t\t\t\tcase 'fontOpacity' :\r\n\t\t\t\t\t\tcase 'fontSupersampling' :\r\n\t\t\t\t\t\tcase 'offset' :\r\n\t\t\t\t\t\tcase 'backgroundColor' :\r\n\t\t\t\t\t\tcase 'backgroundOpacity' :\r\n\t\t\t\t\t\tcase 'backgroundTexture' :\r\n\t\t\t\t\t\tcase 'backgroundSize' :\r\n\t\t\t\t\t\tcase 'borderRadius' :\r\n\t\t\t\t\t\tcase 'borderWidth' :\r\n\t\t\t\t\t\tcase 'borderColor' :\r\n\t\t\t\t\t\tcase 'borderOpacity' :\r\n\t\t\t\t\t\t\tinnerNeedsUpdate = true;\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'hiddenOverflow' :\r\n\t\t\t\t\t\t\tthis[ prop ] = options[ prop ];\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// special cases, this.update() must be called only when some files finished loading\r\n\r\n\t\t\tif ( options.fontFamily ) {\r\n\r\n\t\t\t\tcore_FontLibrary.setFontFamily( this, options.fontFamily );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( options.fontTexture ) {\r\n\r\n\t\t\t\tcore_FontLibrary.setFontTexture( this, options.fontTexture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if font kerning changes for a child of a block with Best Fit enabled, we need to trigger parsing for the parent as well.\r\n\t\t\tif ( this.parentUI && this.parentUI.getBestFit() != 'none' ) this.parentUI.update( true, true, false );\r\n\r\n\t\t\t// Call component update\r\n\r\n\t\t\tthis.update( parsingNeedsUpdate, layoutNeedsUpdate, innerNeedsUpdate );\r\n\r\n\r\n\t\t\tif ( layoutNeedsUpdate ) this.getHighestParent().update( false, true, false );\r\n\r\n\t\t}\r\n\r\n\t\t/////////////////////\r\n\t\t// STATES MANAGEMENT\r\n\t\t/////////////////////\r\n\r\n\t\t/** Store a new state in this component, with linked attributes */\r\n\t\tsetupState( options ) {\r\n\r\n\t\t\tthis.states[ options.state ] = {\r\n\t\t\t\tattributes: options.attributes,\r\n\t\t\t\tonSet: options.onSet\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t/** Set the attributes of a stored state of this component */\r\n\t\tsetState( state ) {\r\n\r\n\t\t\tconst savedState = this.states[ state ];\r\n\r\n\t\t\tif ( !savedState ) {\r\n\t\t\t\tconsole.warn( `state \"${state}\" does not exist within this component:`, this.name );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( state === this.currentState ) return;\r\n\r\n\t\t\tthis.currentState = state;\r\n\r\n\t\t\tif ( savedState.onSet ) savedState.onSet();\r\n\r\n\t\t\tif ( savedState.attributes ) this.set( savedState.attributes );\r\n\r\n\t\t}\r\n\r\n\t\t/** Get completely rid of this component and its children, also unregister it for updates */\r\n\t\tclear() {\r\n\r\n\t\t\tthis.traverse( ( obj ) => {\r\n\r\n\t\t\t\tUpdateManager.disposeOf( obj );\r\n\r\n\t\t\t\tif ( obj.material ) obj.material.dispose();\r\n\r\n\t\t\t\tif ( obj.geometry ) obj.geometry.dispose();\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\t};\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/MaterialManager.js\r\n/* eslint-disable camelcase */\r\n//@TODO: Get rid of non camelcase uniforms\r\n\r\n\r\n\r\n\r\n/**\r\n\r\nJob:\r\n- Host the materials of a given component.\r\n- Update a component's materials clipping planes.\r\n- Update a material uniforms and such.\r\n\r\nKnows:\r\n- Its component materials.\r\n- Its component ancestors clipping planes.\r\n\r\n */\r\nfunction MaterialManager( Base ) {\r\n\r\n\treturn class MaterialManager extends Base {\r\n\r\n\t\tconstructor( options ) {\r\n\r\n\t\t\tsuper( options );\r\n\r\n\t\t\tthis.textUniforms = {\r\n\t\t\t\tu_texture: { value: this.getFontTexture() },\r\n\t\t\t\tu_color: { value: this.getFontColor() },\r\n\t\t\t\tu_opacity: { value: this.getFontOpacity() },\r\n\t\t\t\tu_pxRange: { value: this.getFontPXRange() },\r\n\t\t\t\tu_useRGSS: { value: this.getFontSupersampling() },\r\n\t\t\t};\r\n\r\n\t\t\tthis.backgroundUniforms = {\r\n\t\t\t\tu_texture: { value: this.getBackgroundTexture() },\r\n\t\t\t\tu_color: { value: this.getBackgroundColor() },\r\n\t\t\t\tu_opacity: { value: this.getBackgroundOpacity() },\r\n\t\t\t\tu_backgroundMapping: { value: this.getBackgroundSize() },\r\n\t\t\t\tu_borderWidth: { value: this.getBorderWidth() },\r\n\t\t\t\tu_borderColor: { value: this.getBorderColor() },\r\n\t\t\t\tu_borderRadiusTopLeft: { value: this.getBorderRadius() },\r\n\t\t\t\tu_borderRadiusTopRight: { value: this.getBorderRadius() },\r\n\t\t\t\tu_borderRadiusBottomRight: { value: this.getBorderRadius() },\r\n\t\t\t\tu_borderRadiusBottomLeft: { value: this.getBorderRadius() },\r\n\t\t\t\tu_borderOpacity: { value: this.getBorderOpacity() },\r\n\t\t\t\tu_size: { value: new external_three_namespaceObject.Vector2( 1, 1 ) },\r\n\t\t\t\tu_tSize: { value: new external_three_namespaceObject.Vector2( 1, 1 ) }\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Update backgroundMaterial uniforms.\r\n\t\t * Used within MaterialManager and in Block and InlineBlock innerUpdates.\r\n\t\t */\r\n\t\tupdateBackgroundMaterial() {\r\n\r\n\t\t\tthis.backgroundUniforms.u_texture.value = this.getBackgroundTexture();\r\n\r\n\t\t\tthis.backgroundUniforms.u_tSize.value.set(\r\n\t\t\t\tthis.backgroundUniforms.u_texture.value.image.width,\r\n\t\t\t\tthis.backgroundUniforms.u_texture.value.image.height\r\n\t\t\t);\r\n\r\n\t\t\tif ( this.size ) this.backgroundUniforms.u_size.value.copy( this.size );\r\n\r\n\t\t\tif ( this.backgroundUniforms.u_texture.value.isDefault ) {\r\n\r\n\t\t\t\tthis.backgroundUniforms.u_color.value = this.getBackgroundColor();\r\n\r\n\t\t\t\tthis.backgroundUniforms.u_opacity.value = this.getBackgroundOpacity();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.backgroundUniforms.u_color.value = this.backgroundColor || Defaults.backgroundWhiteColor;\r\n\r\n\t\t\t\tthis.backgroundUniforms.u_opacity.value = ( !this.backgroundOpacity && this.backgroundOpacity !== 0 ) ?\r\n\t\t\t\t\tDefaults.backgroundOpaqueOpacity :\r\n\t\t\t\t\tthis.backgroundOpacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.backgroundUniforms.u_backgroundMapping.value = ( () => {\r\n\r\n\t\t\t\tswitch ( this.getBackgroundSize() ) {\r\n\r\n\t\t\t\t\tcase 'stretch':\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\tcase 'contain':\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\tcase 'cover':\r\n\t\t\t\t\t\treturn 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )();\r\n\r\n\t\t\tconst borderRadius = this.getBorderRadius();\r\n\t\t\tthis.backgroundUniforms.u_borderWidth.value = this.getBorderWidth();\r\n\t\t\tthis.backgroundUniforms.u_borderColor.value = this.getBorderColor();\r\n\t\t\tthis.backgroundUniforms.u_borderOpacity.value = this.getBorderOpacity();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( Array.isArray( borderRadius ) ) {\r\n\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusTopLeft.value = borderRadius[ 0 ];\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusTopRight.value = borderRadius[ 1 ];\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusBottomRight.value = borderRadius[ 2 ];\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusBottomLeft.value = borderRadius[ 3 ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusTopLeft.value = borderRadius;\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusTopRight.value = borderRadius;\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusBottomRight.value = borderRadius;\r\n\t\t\t\tthis.backgroundUniforms.u_borderRadiusBottomLeft.value = borderRadius;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Update backgroundMaterial uniforms.\r\n\t\t * Used within MaterialManager and in Text innerUpdates.\r\n\t\t */\r\n\t\tupdateTextMaterial() {\r\n\r\n\t\t\tthis.textUniforms.u_texture.value = this.getFontTexture();\r\n\t\t\tthis.textUniforms.u_color.value = this.getFontColor();\r\n\t\t\tthis.textUniforms.u_opacity.value = this.getFontOpacity();\r\n\t\t\tthis.textUniforms.u_pxRange.value = this.getFontPXRange();\r\n\t\t\tthis.textUniforms.u_useRGSS.value = this.getFontSupersampling();\r\n\r\n\t\t}\r\n\r\n\t\t/** Called by Block, which needs the background material to create a mesh */\r\n\t\tgetBackgroundMaterial() {\r\n\r\n\t\t\tif ( !this.backgroundMaterial || !this.backgroundUniforms ) {\r\n\r\n\t\t\t\tthis.backgroundMaterial = this._makeBackgroundMaterial();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.backgroundMaterial;\r\n\r\n\t\t}\r\n\r\n\t\t/** Called by Text to get the font material */\r\n\t\tgetFontMaterial() {\r\n\r\n\t\t\tif ( !this.fontMaterial || !this.textUniforms ) {\r\n\r\n\t\t\t\tthis.fontMaterial = this._makeTextMaterial();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.fontMaterial;\r\n\r\n\t\t}\r\n\r\n\t\t/** @private */\r\n\t\t_makeTextMaterial() {\r\n\r\n\t\t\treturn new external_three_namespaceObject.ShaderMaterial( {\r\n\t\t\t\tuniforms: this.textUniforms,\r\n\t\t\t\ttransparent: true,\r\n\t\t\t\tclipping: true,\r\n\t\t\t\tvertexShader: textVertex,\r\n\t\t\t\tfragmentShader: textFragment,\r\n\t\t\t\textensions: {\r\n\t\t\t\t\tderivatives: true\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\t/** @private */\r\n\t\t_makeBackgroundMaterial() {\r\n\r\n\t\t\treturn new external_three_namespaceObject.ShaderMaterial( {\r\n\t\t\t\tuniforms: this.backgroundUniforms,\r\n\t\t\t\ttransparent: true,\r\n\t\t\t\tclipping: true,\r\n\t\t\t\tvertexShader: backgroundVertex,\r\n\t\t\t\tfragmentShader: backgroundFragment,\r\n\t\t\t\textensions: {\r\n\t\t\t\t\tderivatives: true\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Update a component's materials clipping planes.\r\n\t\t * Called every frame.\r\n\t\t */\r\n\t\tupdateClippingPlanes( value ) {\r\n\r\n\t\t\tconst newClippingPlanes = value !== undefined ? value : this.getClippingPlanes();\r\n\r\n\t\t\tif ( JSON.stringify( newClippingPlanes ) !== JSON.stringify( this.clippingPlanes ) ) {\r\n\r\n\t\t\t\tthis.clippingPlanes = newClippingPlanes;\r\n\r\n\t\t\t\tif ( this.fontMaterial ) this.fontMaterial.clippingPlanes = this.clippingPlanes;\r\n\r\n\t\t\t\tif ( this.backgroundMaterial ) this.backgroundMaterial.clippingPlanes = this.clippingPlanes;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n////////////////\r\n// Text shaders\r\n////////////////\r\n\r\nconst textVertex = `\r\nvarying vec2 vUv;\r\n\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\tvUv = uv;\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\tgl_Position.z -= 0.00001;\r\n\r\n\t#include <clipping_planes_vertex>\r\n\r\n}\r\n`;\r\n\r\n//\r\n\r\nconst textFragment = `\r\n\r\nuniform sampler2D u_texture;\r\nuniform vec3 u_color;\r\nuniform float u_opacity;\r\nuniform float u_pxRange;\r\nuniform bool u_useRGSS;\r\n\r\nvarying vec2 vUv;\r\n\r\n#include <clipping_planes_pars_fragment>\r\n\r\n// functions from the original msdf repo:\r\n// https://github.com/Chlumsky/msdfgen#using-a-multi-channel-distance-field\r\n\r\nfloat median(float r, float g, float b) {\r\n\treturn max(min(r, g), min(max(r, g), b));\r\n}\r\n\r\nfloat screenPxRange() {\r\n\tvec2 unitRange = vec2(u_pxRange)/vec2(textureSize(u_texture, 0));\r\n\tvec2 screenTexSize = vec2(1.0)/fwidth(vUv);\r\n\treturn max(0.5*dot(unitRange, screenTexSize), 1.0);\r\n}\r\n\r\nfloat tap(vec2 offsetUV) {\r\n\tvec3 msd = texture( u_texture, offsetUV ).rgb;\r\n\tfloat sd = median(msd.r, msd.g, msd.b);\r\n\tfloat screenPxDistance = screenPxRange() * (sd - 0.5);\r\n\tfloat alpha = clamp(screenPxDistance + 0.5, 0.0, 1.0);\r\n\treturn alpha;\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat alpha;\r\n\r\n\tif ( u_useRGSS ) {\r\n\r\n\t\t// shader-based supersampling based on https://bgolus.medium.com/sharper-mipmapping-using-shader-based-supersampling-ed7aadb47bec\r\n\t\t// per pixel partial derivatives\r\n\t\tvec2 dx = dFdx(vUv);\r\n\t\tvec2 dy = dFdy(vUv);\r\n\r\n\t\t// rotated grid uv offsets\r\n\t\tvec2 uvOffsets = vec2(0.125, 0.375);\r\n\t\tvec2 offsetUV = vec2(0.0, 0.0);\r\n\r\n\t\t// supersampled using 2x2 rotated grid\r\n\t\talpha = 0.0;\r\n\t\toffsetUV.xy = vUv + uvOffsets.x * dx + uvOffsets.y * dy;\r\n\t\talpha += tap(offsetUV);\r\n\t\toffsetUV.xy = vUv - uvOffsets.x * dx - uvOffsets.y * dy;\r\n\t\talpha += tap(offsetUV);\r\n\t\toffsetUV.xy = vUv + uvOffsets.y * dx - uvOffsets.x * dy;\r\n\t\talpha += tap(offsetUV);\r\n\t\toffsetUV.xy = vUv - uvOffsets.y * dx + uvOffsets.x * dy;\r\n\t\talpha += tap(offsetUV);\r\n\t\talpha *= 0.25;\r\n\r\n\t} else {\r\n\r\n\t\talpha = tap( vUv );\r\n\r\n\t}\r\n\r\n\r\n\t// apply the opacity\r\n\talpha *= u_opacity;\r\n\r\n\t// this is useful to avoid z-fighting when quads overlap because of kerning\r\n\tif ( alpha < 0.02) discard;\r\n\r\n\r\n\tgl_FragColor = vec4( u_color, alpha );\r\n\r\n\t#include <clipping_planes_fragment>\r\n\r\n}\r\n`;\r\n\r\n//////////////////////\r\n// Background shaders\r\n//////////////////////\r\n\r\nconst backgroundVertex = `\r\nvarying vec2 vUv;\r\n\r\n#include <clipping_planes_pars_vertex>\r\n\r\nvoid main() {\r\n\r\n\tvUv = uv;\r\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n\tgl_Position = projectionMatrix * mvPosition;\r\n\r\n\t#include <clipping_planes_vertex>\r\n\r\n}\r\n`;\r\n\r\n//\r\n\r\nconst backgroundFragment = `\r\n\r\nuniform sampler2D u_texture;\r\nuniform vec3 u_color;\r\nuniform float u_opacity;\r\n\r\nuniform float u_borderRadiusTopLeft;\r\nuniform float u_borderRadiusTopRight;\r\nuniform float u_borderRadiusBottomLeft;\r\nuniform float u_borderRadiusBottomRight;\r\nuniform float u_borderWidth;\r\nuniform vec3 u_borderColor;\r\nuniform float u_borderOpacity;\r\nuniform vec2 u_size;\r\nuniform vec2 u_tSize;\r\nuniform int u_backgroundMapping;\r\n\r\nvarying vec2 vUv;\r\n\r\n#include <clipping_planes_pars_fragment>\r\n\r\nfloat getEdgeDist() {\r\n\tvec2 ndc = vec2( vUv.x * 2.0 - 1.0, vUv.y * 2.0 - 1.0 );\r\n\tvec2 planeSpaceCoord = vec2( u_size.x * 0.5 * ndc.x, u_size.y * 0.5 * ndc.y );\r\n\tvec2 corner = u_size * 0.5;\r\n\tvec2 offsetCorner = corner - abs( planeSpaceCoord );\r\n\tfloat innerRadDist = min( offsetCorner.x, offsetCorner.y ) * -1.0;\r\n\tif (vUv.x < 0.5 && vUv.y >= 0.5) {\r\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopLeft, 0.0 ) ) - u_borderRadiusTopLeft;\r\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusTopLeft );\r\n\t\treturn mix( innerRadDist, roundedDist, s );\r\n\t}\r\n\tif (vUv.x >= 0.5 && vUv.y >= 0.5) {\r\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusTopRight, 0.0 ) ) - u_borderRadiusTopRight;\r\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusTopRight );\r\n\t\treturn mix( innerRadDist, roundedDist, s );\r\n\t}\r\n\tif (vUv.x >= 0.5 && vUv.y < 0.5) {\r\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomRight, 0.0 ) ) - u_borderRadiusBottomRight;\r\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusBottomRight );\r\n\t\treturn mix( innerRadDist, roundedDist, s );\r\n\t}\r\n\tif (vUv.x < 0.5 && vUv.y < 0.5) {\r\n\t\tfloat roundedDist = length( max( abs( planeSpaceCoord ) - u_size * 0.5 + u_borderRadiusBottomLeft, 0.0 ) ) - u_borderRadiusBottomLeft;\r\n\t\tfloat s = step( innerRadDist * -1.0, u_borderRadiusBottomLeft );\r\n\t\treturn mix( innerRadDist, roundedDist, s );\r\n\t}\r\n}\r\n\r\nvec4 sampleTexture() {\r\n\tfloat textureRatio = u_tSize.x / u_tSize.y;\r\n\tfloat panelRatio = u_size.x / u_size.y;\r\n\tvec2 uv = vUv;\r\n\tif ( u_backgroundMapping == 1 ) { // contain\r\n\t\tif ( textureRatio < panelRatio ) { // repeat on X\r\n\t\t\tfloat newX = uv.x * ( panelRatio / textureRatio );\r\n\t\t\tnewX += 0.5 - 0.5 * ( panelRatio / textureRatio );\r\n\t\t\tuv.x = newX;\r\n\t\t} else { // repeat on Y\r\n\t\t\tfloat newY = uv.y * ( textureRatio / panelRatio );\r\n\t\t\tnewY += 0.5 - 0.5 * ( textureRatio / panelRatio );\r\n\t\t\tuv.y = newY;\r\n\t\t}\r\n\t} else if ( u_backgroundMapping == 2 ) { // cover\r\n\t\tif ( textureRatio < panelRatio ) { // stretch on Y\r\n\t\t\tfloat newY = uv.y * ( textureRatio / panelRatio );\r\n\t\t\tnewY += 0.5 - 0.5 * ( textureRatio / panelRatio );\r\n\t\t\tuv.y = newY;\r\n\t\t} else { // stretch on X\r\n\t\t\tfloat newX = uv.x * ( panelRatio / textureRatio );\r\n\t\t\tnewX += 0.5 - 0.5 * ( panelRatio / textureRatio );\r\n\t\t\tuv.x = newX;\r\n\t\t}\r\n\t}\r\n\treturn texture2D( u_texture, uv ).rgba;\r\n}\r\n\r\nvoid main() {\r\n\r\n\tfloat edgeDist = getEdgeDist();\r\n\tfloat change = fwidth( edgeDist );\r\n\r\n\tvec4 textureSample = sampleTexture();\r\n\tvec3 blendedColor = textureSample.rgb * u_color;\r\n\r\n\tfloat alpha = smoothstep( change, 0.0, edgeDist );\r\n\tfloat blendedOpacity = u_opacity * textureSample.a * alpha;\r\n\r\n\tvec4 frameColor = vec4( blendedColor, blendedOpacity );\r\n\r\n\tif ( u_borderWidth <= 0.0 ) {\r\n\t\tgl_FragColor = frameColor;\r\n\t} else {\r\n\t\tvec4 borderColor = vec4( u_borderColor, u_borderOpacity * alpha );\r\n\t\tfloat stp = smoothstep( edgeDist + change, edgeDist, u_borderWidth * -1.0 );\r\n\t\tgl_FragColor = mix( frameColor, borderColor, stp );\r\n\t}\r\n\r\n\t#include <clipping_planes_fragment>\r\n}\r\n`;\r\n\r\n;// CONCATENATED MODULE: ./src/content/Frame.js\r\n\r\n\r\n\r\n/**\r\n * Returns a basic plane mesh.\r\n */\r\nclass Frame extends external_three_namespaceObject.Mesh {\r\n\r\n\tconstructor( material ) {\r\n\r\n\t\tconst geometry = new external_three_namespaceObject.PlaneGeometry();\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.castShadow = true;\r\n\t\tthis.receiveShadow = true;\r\n\r\n\t\tthis.name = 'MeshUI-Frame';\r\n\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/utils/mix.js\r\nlet _Base = null;\r\n\r\n/**\r\n * A function for applying multiple mixins more tersely (less verbose)\r\n * @param {Function[]} mixins - All args to this function should be mixins that take a class and return a class.\r\n */\r\nfunction mix( ...mixins ) {\r\n\r\n\t// console.log('initial Base: ', _Base);\r\n\r\n\tif( !_Base ){\r\n\t\tthrow new Error(\"Cannot use mixins with Base null\");\r\n\t}\r\n\r\n\tlet Base = _Base;\r\n\r\n\t_Base = null;\r\n\r\n\tlet i = mixins.length;\r\n\tlet mixin;\r\n\r\n\twhile ( --i >= 0 ) {\r\n\r\n\t\tmixin = mixins[ i ];\r\n\t\tBase = mixin( Base );\r\n\r\n\t}\r\n\r\n\treturn Base;\r\n\r\n}\r\n\r\nmix.withBase = ( Base ) => {\r\n\r\n\t_Base = Base;\r\n\r\n\treturn mix;\r\n\r\n};\r\n\r\n;// CONCATENATED MODULE: ./src/components/Block.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n\r\nJob:\r\n- Update a Block component\r\n- Calls BoxComponent's API to position its children box components\r\n- Calls InlineManager's API to position its children inline components\r\n- Call creation and update functions of its background planes\r\n\r\n */\r\nclass Block extends mix.withBase( external_three_namespaceObject.Object3D )(\r\n\tBoxComponent,\r\n\tInlineManager,\r\n\tMaterialManager,\r\n\tMeshUIComponent\r\n) {\r\n\r\n\tconstructor( options ) {\r\n\r\n\t\tsuper( options );\r\n\r\n\t\tthis.isBlock = true;\r\n\r\n\t\t//\r\n\r\n\t\tthis.size = new external_three_namespaceObject.Vector2( 1, 1 );\r\n\r\n\t\tthis.frame = new Frame( this.getBackgroundMaterial() );\r\n\r\n\t\t// This is for hiddenOverflow to work\r\n\t\tthis.frame.onBeforeRender = () => {\r\n\r\n\t\t\tif ( this.updateClippingPlanes ) {\r\n\r\n\t\t\t\tthis.updateClippingPlanes();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.add( this.frame );\r\n\r\n\t\t// Lastly set the options parameters to this object, which will trigger an update\r\n\r\n\t\tthis.set( options );\r\n\r\n\t}\r\n\r\n\t////////////\r\n\t//  UPDATE\r\n\t////////////\r\n\r\n\tparseParams() {\r\n\r\n\t\tconst bestFit = this.getBestFit();\r\n\r\n\t\tif ( bestFit != 'none' && this.childrenTexts.length ) {\r\n\r\n\t\t\tthis.calculateBestFit( bestFit );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.childrenTexts.forEach( child => {\r\n\r\n\t\t\t\tchild._fitFontSize = undefined;\r\n\r\n\t\t\t} );\r\n\t\t}\r\n\t}\r\n\r\n\tupdateLayout() {\r\n\r\n\t\t// Get temporary dimension\r\n\r\n\t\tconst WIDTH = this.getWidth();\r\n\r\n\t\tconst HEIGHT = this.getHeight();\r\n\r\n\t\tif ( !WIDTH || !HEIGHT ) {\r\n\r\n\t\t\tconsole.warn( 'Block got no dimension from its parameters or from children parameters' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.size.set( WIDTH, HEIGHT );\r\n\t\tthis.frame.scale.set( WIDTH, HEIGHT, 1 );\r\n\r\n\t\tif ( this.frame ) this.updateBackgroundMaterial();\r\n\r\n\t\tthis.frame.renderOrder = this.getParentsNumber();\r\n\r\n\t\t// Position this element according to earlier parent computation.\r\n\t\t// Delegate to BoxComponent.\r\n\r\n\t\tif ( this.autoLayout ) {\r\n\r\n\t\t\tthis.setPosFromParentRecords();\r\n\r\n\t\t}\r\n\r\n\t\t// Position inner elements according to dimensions and layout parameters.\r\n\t\t// Delegate to BoxComponent.\r\n\r\n\t\tif ( this.childrenInlines.length ) {\r\n\r\n\t\t\tthis.computeInlinesPosition();\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeChildrenPosition();\r\n\r\n\t\t// We check if this block is the root component,\r\n\t\t// because most of the time the user wants to set the\r\n\t\t// root component's z position themselves\r\n\t\tif ( this.parentUI ) {\r\n\r\n\t\t\tthis.position.z = this.getOffset();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tupdateInner() {\r\n\r\n\t\t// We check if this block is the root component,\r\n\t\t// because most of the time the user wants to set the\r\n\t\t// root component's z position themselves\r\n\t\tif ( this.parentUI ) {\r\n\r\n\t\t\tthis.position.z = this.getOffset();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.frame ) this.updateBackgroundMaterial();\r\n\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/InlineComponent.js\r\n/**\r\n\r\nJob: nothing yet, but adding a isInline parameter to an inline component\r\n\r\nKnows: parent dimensions\r\n\r\n */\r\nfunction InlineComponent( Base ) {\r\n\r\n\treturn class InlineComponent extends Base {\r\n\r\n\t\tconstructor( options ) {\r\n\r\n\t\t\tsuper( options );\r\n\r\n\t\t\tthis.isInline = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n}\r\n\r\n;// CONCATENATED MODULE: ./node_modules/three/examples/jsm/utils/BufferGeometryUtils.js\r\n\r\n\r\nfunction computeTangents() {\r\n\r\n\tthrow new Error( 'BufferGeometryUtils: computeTangents renamed to computeMikkTSpaceTangents.' );\r\n\r\n}\r\n\r\nfunction computeMikkTSpaceTangents( geometry, MikkTSpace, negateSign = true ) {\r\n\r\n\tif ( ! MikkTSpace || ! MikkTSpace.isReady ) {\r\n\r\n\t\tthrow new Error( 'BufferGeometryUtils: Initialized MikkTSpace library required.' );\r\n\r\n\t}\r\n\r\n\tif ( ! geometry.hasAttribute( 'position' ) || ! geometry.hasAttribute( 'normal' ) || ! geometry.hasAttribute( 'uv' ) ) {\r\n\r\n\t\tthrow new Error( 'BufferGeometryUtils: Tangents require \"position\", \"normal\", and \"uv\" attributes.' );\r\n\r\n\t}\r\n\r\n\tfunction getAttributeArray( attribute ) {\r\n\r\n\t\tif ( attribute.normalized || attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tconst srcArray = attribute.isInterleavedBufferAttribute ? attribute.data.array : attribute.array;\r\n\t\t\tconst dstArray = new Float32Array( attribute.getCount() * attribute.itemSize );\r\n\r\n\t\t\tfor ( let i = 0, j = 0; i < attribute.getCount(); i ++ ) {\r\n\r\n\t\t\t\tdstArray[ j ++ ] = MathUtils.denormalize( attribute.getX( i ), srcArray );\r\n\t\t\t\tdstArray[ j ++ ] = MathUtils.denormalize( attribute.getY( i ), srcArray );\r\n\r\n\t\t\t\tif ( attribute.itemSize > 2 ) {\r\n\r\n\t\t\t\t\tdstArray[ j ++ ] = MathUtils.denormalize( attribute.getZ( i ), srcArray );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn dstArray;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attribute.array instanceof Float32Array ) {\r\n\r\n\t\t\treturn attribute.array;\r\n\r\n\t\t}\r\n\r\n\t\treturn new Float32Array( attribute.array );\r\n\r\n\t}\r\n\r\n\t// MikkTSpace algorithm requires non-indexed input.\r\n\r\n\tconst _geometry = geometry.index ? geometry.toNonIndexed() : geometry;\r\n\r\n\t// Compute vertex tangents.\r\n\r\n\tconst tangents = MikkTSpace.generateTangents(\r\n\r\n\t\tgetAttributeArray( _geometry.attributes.position ),\r\n\t\tgetAttributeArray( _geometry.attributes.normal ),\r\n\t\tgetAttributeArray( _geometry.attributes.uv )\r\n\r\n\t);\r\n\r\n\t// Texture coordinate convention of glTF differs from the apparent\r\n\t// default of the MikkTSpace library; .w component must be flipped.\r\n\r\n\tif ( negateSign ) {\r\n\r\n\t\tfor ( let i = 3; i < tangents.length; i += 4 ) {\r\n\r\n\t\t\ttangents[ i ] *= - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\t_geometry.setAttribute( 'tangent', new BufferAttribute( tangents, 4 ) );\r\n\r\n\tif ( geometry !== _geometry ) {\r\n\r\n\t\tgeometry.copy( _geometry );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n}\r\n\r\n/**\r\n * @param  {Array<BufferGeometry>} geometries\r\n * @param  {Boolean} useGroups\r\n * @return {BufferGeometry}\r\n */\r\nfunction mergeBufferGeometries( geometries, useGroups = false ) {\r\n\r\n\tconst isIndexed = geometries[ 0 ].index !== null;\r\n\r\n\tconst attributesUsed = new Set( Object.keys( geometries[ 0 ].attributes ) );\r\n\tconst morphAttributesUsed = new Set( Object.keys( geometries[ 0 ].morphAttributes ) );\r\n\r\n\tconst attributes = {};\r\n\tconst morphAttributes = {};\r\n\r\n\tconst morphTargetsRelative = geometries[ 0 ].morphTargetsRelative;\r\n\r\n\tconst mergedGeometry = new external_three_namespaceObject.BufferGeometry();\r\n\r\n\tlet offset = 0;\r\n\r\n\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\tconst geometry = geometries[ i ];\r\n\t\tlet attributesCount = 0;\r\n\r\n\t\t// ensure that all geometries are indexed, or none\r\n\r\n\t\tif ( isIndexed !== ( geometry.index !== null ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure index attribute exists among all geometries, or in none of them.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// gather attributes, exit early if they're different\r\n\r\n\t\tfor ( const name in geometry.attributes ) {\r\n\r\n\t\t\tif ( ! attributesUsed.has( name ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. All geometries must have compatible attributes; make sure \"' + name + '\" attribute exists among all geometries, or in none of them.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes[ name ] === undefined ) attributes[ name ] = [];\r\n\r\n\t\t\tattributes[ name ].push( geometry.attributes[ name ] );\r\n\r\n\t\t\tattributesCount ++;\r\n\r\n\t\t}\r\n\r\n\t\t// ensure geometries have the same number of attributes\r\n\r\n\t\tif ( attributesCount !== attributesUsed.size ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. Make sure all geometries have the same number of attributes.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// gather morph attributes, exit early if they're different\r\n\r\n\t\tif ( morphTargetsRelative !== geometry.morphTargetsRelative ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. .morphTargetsRelative must be consistent throughout all geometries.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const name in geometry.morphAttributes ) {\r\n\r\n\t\t\tif ( ! morphAttributesUsed.has( name ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '.  .morphAttributes must be consistent throughout all geometries.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( morphAttributes[ name ] === undefined ) morphAttributes[ name ] = [];\r\n\r\n\t\t\tmorphAttributes[ name ].push( geometry.morphAttributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t\t// gather .userData\r\n\r\n\t\tmergedGeometry.userData.mergedUserData = mergedGeometry.userData.mergedUserData || [];\r\n\t\tmergedGeometry.userData.mergedUserData.push( geometry.userData );\r\n\r\n\t\tif ( useGroups ) {\r\n\r\n\t\t\tlet count;\r\n\r\n\t\t\tif ( isIndexed ) {\r\n\r\n\t\t\t\tcount = geometry.index.count;\r\n\r\n\t\t\t} else if ( geometry.attributes.position !== undefined ) {\r\n\r\n\t\t\t\tcount = geometry.attributes.position.count;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed with geometry at index ' + i + '. The geometry must have either an index or a position attribute' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmergedGeometry.addGroup( offset, count, i );\r\n\r\n\t\t\toffset += count;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// merge indices\r\n\r\n\tif ( isIndexed ) {\r\n\r\n\t\tlet indexOffset = 0;\r\n\t\tconst mergedIndex = [];\r\n\r\n\t\tfor ( let i = 0; i < geometries.length; ++ i ) {\r\n\r\n\t\t\tconst index = geometries[ i ].index;\r\n\r\n\t\t\tfor ( let j = 0; j < index.count; ++ j ) {\r\n\r\n\t\t\t\tmergedIndex.push( index.getX( j ) + indexOffset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tindexOffset += geometries[ i ].attributes.position.count;\r\n\r\n\t\t}\r\n\r\n\t\tmergedGeometry.setIndex( mergedIndex );\r\n\r\n\t}\r\n\r\n\t// merge attributes\r\n\r\n\tfor ( const name in attributes ) {\r\n\r\n\t\tconst mergedAttribute = mergeBufferAttributes( attributes[ name ] );\r\n\r\n\t\tif ( ! mergedAttribute ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' attribute.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tmergedGeometry.setAttribute( name, mergedAttribute );\r\n\r\n\t}\r\n\r\n\t// merge morph attributes\r\n\r\n\tfor ( const name in morphAttributes ) {\r\n\r\n\t\tconst numMorphTargets = morphAttributes[ name ][ 0 ].length;\r\n\r\n\t\tif ( numMorphTargets === 0 ) break;\r\n\r\n\t\tmergedGeometry.morphAttributes = mergedGeometry.morphAttributes || {};\r\n\t\tmergedGeometry.morphAttributes[ name ] = [];\r\n\r\n\t\tfor ( let i = 0; i < numMorphTargets; ++ i ) {\r\n\r\n\t\t\tconst morphAttributesToMerge = [];\r\n\r\n\t\t\tfor ( let j = 0; j < morphAttributes[ name ].length; ++ j ) {\r\n\r\n\t\t\t\tmorphAttributesToMerge.push( morphAttributes[ name ][ j ][ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst mergedMorphAttribute = mergeBufferAttributes( morphAttributesToMerge );\r\n\r\n\t\t\tif ( ! mergedMorphAttribute ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferGeometries() failed while trying to merge the ' + name + ' morphAttribute.' );\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmergedGeometry.morphAttributes[ name ].push( mergedMorphAttribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn mergedGeometry;\r\n\r\n}\r\n\r\n/**\r\n * @param {Array<BufferAttribute>} attributes\r\n * @return {BufferAttribute}\r\n */\r\nfunction mergeBufferAttributes( attributes ) {\r\n\r\n\tlet TypedArray;\r\n\tlet itemSize;\r\n\tlet normalized;\r\n\tlet arrayLength = 0;\r\n\r\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\r\n\r\n\t\tconst attribute = attributes[ i ];\r\n\r\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. InterleavedBufferAttributes are not supported.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\r\n\t\tif ( TypedArray !== attribute.array.constructor ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.array must be of consistent array types across matching attributes.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemSize === undefined ) itemSize = attribute.itemSize;\r\n\t\tif ( itemSize !== attribute.itemSize ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.itemSize must be consistent across matching attributes.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tif ( normalized === undefined ) normalized = attribute.normalized;\r\n\t\tif ( normalized !== attribute.normalized ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils: .mergeBufferAttributes() failed. BufferAttribute.normalized must be consistent across matching attributes.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tarrayLength += attribute.array.length;\r\n\r\n\t}\r\n\r\n\tconst array = new TypedArray( arrayLength );\r\n\tlet offset = 0;\r\n\r\n\tfor ( let i = 0; i < attributes.length; ++ i ) {\r\n\r\n\t\tarray.set( attributes[ i ].array, offset );\r\n\r\n\t\toffset += attributes[ i ].array.length;\r\n\r\n\t}\r\n\r\n\treturn new external_three_namespaceObject.BufferAttribute( array, itemSize, normalized );\r\n\r\n}\r\n\r\n/**\r\n * @param {Array<BufferAttribute>} attributes\r\n * @return {Array<InterleavedBufferAttribute>}\r\n */\r\nfunction interleaveAttributes( attributes ) {\r\n\r\n\t// Interleaves the provided attributes into an InterleavedBuffer and returns\r\n\t// a set of InterleavedBufferAttributes for each attribute\r\n\tlet TypedArray;\r\n\tlet arrayLength = 0;\r\n\tlet stride = 0;\r\n\r\n\t// calculate the the length and type of the interleavedBuffer\r\n\tfor ( let i = 0, l = attributes.length; i < l; ++ i ) {\r\n\r\n\t\tconst attribute = attributes[ i ];\r\n\r\n\t\tif ( TypedArray === undefined ) TypedArray = attribute.array.constructor;\r\n\t\tif ( TypedArray !== attribute.array.constructor ) {\r\n\r\n\t\t\tconsole.error( 'AttributeBuffers of different types cannot be interleaved' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tarrayLength += attribute.array.length;\r\n\t\tstride += attribute.itemSize;\r\n\r\n\t}\r\n\r\n\t// Create the set of buffer attributes\r\n\tconst interleavedBuffer = new InterleavedBuffer( new TypedArray( arrayLength ), stride );\r\n\tlet offset = 0;\r\n\tconst res = [];\r\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\r\n\tconst setters = [ 'setX', 'setY', 'setZ', 'setW' ];\r\n\r\n\tfor ( let j = 0, l = attributes.length; j < l; j ++ ) {\r\n\r\n\t\tconst attribute = attributes[ j ];\r\n\t\tconst itemSize = attribute.itemSize;\r\n\t\tconst count = attribute.count;\r\n\t\tconst iba = new InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, attribute.normalized );\r\n\t\tres.push( iba );\r\n\r\n\t\toffset += itemSize;\r\n\r\n\t\t// Move the data for each attribute into the new interleavedBuffer\r\n\t\t// at the appropriate offset\r\n\t\tfor ( let c = 0; c < count; c ++ ) {\r\n\r\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\r\n\r\n\t\t\t\tiba[ setters[ k ] ]( c, attribute[ getters[ k ] ]( c ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn res;\r\n\r\n}\r\n\r\n// returns a new, non-interleaved version of the provided attribute\r\nfunction deinterleaveAttribute( attribute ) {\r\n\r\n\tconst cons = attribute.data.array.constructor;\r\n\tconst count = attribute.count;\r\n\tconst itemSize = attribute.itemSize;\r\n\tconst normalized = attribute.normalized;\r\n\r\n\tconst array = new cons( count * itemSize );\r\n\tlet newAttribute;\r\n\tif ( attribute.isInstancedInterleavedBufferAttribute ) {\r\n\r\n\t\tnewAttribute = new InstancedBufferAttribute( array, itemSize, normalized, attribute.meshPerAttribute );\r\n\r\n\t} else {\r\n\r\n\t\tnewAttribute = new BufferAttribute( array, itemSize, normalized );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\tnewAttribute.setX( i, attribute.getX( i ) );\r\n\r\n\t\tif ( itemSize >= 2 ) {\r\n\r\n\t\t\tnewAttribute.setY( i, attribute.getY( i ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemSize >= 3 ) {\r\n\r\n\t\t\tnewAttribute.setZ( i, attribute.getZ( i ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemSize >= 4 ) {\r\n\r\n\t\t\tnewAttribute.setW( i, attribute.getW( i ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn newAttribute;\r\n\r\n}\r\n\r\n// deinterleaves all attributes on the geometry\r\nfunction deinterleaveGeometry( geometry ) {\r\n\r\n\tconst attributes = geometry.attributes;\r\n\tconst morphTargets = geometry.morphTargets;\r\n\tconst attrMap = new Map();\r\n\r\n\tfor ( const key in attributes ) {\r\n\r\n\t\tconst attr = attributes[ key ];\r\n\t\tif ( attr.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tif ( ! attrMap.has( attr ) ) {\r\n\r\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tattributes[ key ] = attrMap.get( attr );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( const key in morphTargets ) {\r\n\r\n\t\tconst attr = morphTargets[ key ];\r\n\t\tif ( attr.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\tif ( ! attrMap.has( attr ) ) {\r\n\r\n\t\t\t\tattrMap.set( attr, deinterleaveAttribute( attr ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmorphTargets[ key ] = attrMap.get( attr );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * @param {Array<BufferGeometry>} geometry\r\n * @return {number}\r\n */\r\nfunction estimateBytesUsed( geometry ) {\r\n\r\n\t// Return the estimated memory used by this geometry in bytes\r\n\t// Calculate using itemSize, count, and BYTES_PER_ELEMENT to account\r\n\t// for InterleavedBufferAttributes.\r\n\tlet mem = 0;\r\n\tfor ( const name in geometry.attributes ) {\r\n\r\n\t\tconst attr = geometry.getAttribute( name );\r\n\t\tmem += attr.count * attr.itemSize * attr.array.BYTES_PER_ELEMENT;\r\n\r\n\t}\r\n\r\n\tconst indices = geometry.getIndex();\r\n\tmem += indices ? indices.count * indices.itemSize * indices.array.BYTES_PER_ELEMENT : 0;\r\n\treturn mem;\r\n\r\n}\r\n\r\n/**\r\n * @param {BufferGeometry} geometry\r\n * @param {number} tolerance\r\n * @return {BufferGeometry>}\r\n */\r\nfunction mergeVertices( geometry, tolerance = 1e-4 ) {\r\n\r\n\ttolerance = Math.max( tolerance, Number.EPSILON );\r\n\r\n\t// Generate an index buffer if the geometry doesn't have one, or optimize it\r\n\t// if it's already available.\r\n\tconst hashToIndex = {};\r\n\tconst indices = geometry.getIndex();\r\n\tconst positions = geometry.getAttribute( 'position' );\r\n\tconst vertexCount = indices ? indices.count : positions.count;\r\n\r\n\t// next value for triangle indices\r\n\tlet nextIndex = 0;\r\n\r\n\t// attributes and new attribute arrays\r\n\tconst attributeNames = Object.keys( geometry.attributes );\r\n\tconst attrArrays = {};\r\n\tconst morphAttrsArrays = {};\r\n\tconst newIndices = [];\r\n\tconst getters = [ 'getX', 'getY', 'getZ', 'getW' ];\r\n\r\n\t// initialize the arrays\r\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\r\n\r\n\t\tconst name = attributeNames[ i ];\r\n\r\n\t\tattrArrays[ name ] = [];\r\n\r\n\t\tconst morphAttr = geometry.morphAttributes[ name ];\r\n\t\tif ( morphAttr ) {\r\n\r\n\t\t\tmorphAttrsArrays[ name ] = new Array( morphAttr.length ).fill().map( () => [] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// convert the error tolerance to an amount of decimal places to truncate to\r\n\tconst decimalShift = Math.log10( 1 / tolerance );\r\n\tconst shiftMultiplier = Math.pow( 10, decimalShift );\r\n\tfor ( let i = 0; i < vertexCount; i ++ ) {\r\n\r\n\t\tconst index = indices ? indices.getX( i ) : i;\r\n\r\n\t\t// Generate a hash for the vertex attributes at the current index 'i'\r\n\t\tlet hash = '';\r\n\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\r\n\r\n\t\t\tconst name = attributeNames[ j ];\r\n\t\t\tconst attribute = geometry.getAttribute( name );\r\n\t\t\tconst itemSize = attribute.itemSize;\r\n\r\n\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\r\n\r\n\t\t\t\t// double tilde truncates the decimal value\r\n\t\t\t\thash += `${ ~ ~ ( attribute[ getters[ k ] ]( index ) * shiftMultiplier ) },`;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Add another reference to the vertex if it's already\r\n\t\t// used by another index\r\n\t\tif ( hash in hashToIndex ) {\r\n\r\n\t\t\tnewIndices.push( hashToIndex[ hash ] );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// copy data to the new index in the attribute arrays\r\n\t\t\tfor ( let j = 0, l = attributeNames.length; j < l; j ++ ) {\r\n\r\n\t\t\t\tconst name = attributeNames[ j ];\r\n\t\t\t\tconst attribute = geometry.getAttribute( name );\r\n\t\t\t\tconst morphAttr = geometry.morphAttributes[ name ];\r\n\t\t\t\tconst itemSize = attribute.itemSize;\r\n\t\t\t\tconst newarray = attrArrays[ name ];\r\n\t\t\t\tconst newMorphArrays = morphAttrsArrays[ name ];\r\n\r\n\t\t\t\tfor ( let k = 0; k < itemSize; k ++ ) {\r\n\r\n\t\t\t\t\tconst getterFunc = getters[ k ];\r\n\t\t\t\t\tnewarray.push( attribute[ getterFunc ]( index ) );\r\n\r\n\t\t\t\t\tif ( morphAttr ) {\r\n\r\n\t\t\t\t\t\tfor ( let m = 0, ml = morphAttr.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tnewMorphArrays[ m ].push( morphAttr[ m ][ getterFunc ]( index ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\thashToIndex[ hash ] = nextIndex;\r\n\t\t\tnewIndices.push( nextIndex );\r\n\t\t\tnextIndex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Generate typed arrays from new attribute arrays and update\r\n\t// the attributeBuffers\r\n\tconst result = geometry.clone();\r\n\tfor ( let i = 0, l = attributeNames.length; i < l; i ++ ) {\r\n\r\n\t\tconst name = attributeNames[ i ];\r\n\t\tconst oldAttribute = geometry.getAttribute( name );\r\n\r\n\t\tconst buffer = new oldAttribute.array.constructor( attrArrays[ name ] );\r\n\t\tconst attribute = new BufferAttribute( buffer, oldAttribute.itemSize, oldAttribute.normalized );\r\n\r\n\t\tresult.setAttribute( name, attribute );\r\n\r\n\t\t// Update the attribute arrays\r\n\t\tif ( name in morphAttrsArrays ) {\r\n\r\n\t\t\tfor ( let j = 0; j < morphAttrsArrays[ name ].length; j ++ ) {\r\n\r\n\t\t\t\tconst oldMorphAttribute = geometry.morphAttributes[ name ][ j ];\r\n\r\n\t\t\t\tconst buffer = new oldMorphAttribute.array.constructor( morphAttrsArrays[ name ][ j ] );\r\n\t\t\t\tconst morphAttribute = new BufferAttribute( buffer, oldMorphAttribute.itemSize, oldMorphAttribute.normalized );\r\n\t\t\t\tresult.morphAttributes[ name ][ j ] = morphAttribute;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// indices\r\n\r\n\tresult.setIndex( newIndices );\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n/**\r\n * @param {BufferGeometry} geometry\r\n * @param {number} drawMode\r\n * @return {BufferGeometry>}\r\n */\r\nfunction toTrianglesDrawMode( geometry, drawMode ) {\r\n\r\n\tif ( drawMode === TrianglesDrawMode ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles.' );\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tif ( drawMode === TriangleFanDrawMode || drawMode === TriangleStripDrawMode ) {\r\n\r\n\t\tlet index = geometry.getIndex();\r\n\r\n\t\t// generate index if not present\r\n\r\n\t\tif ( index === null ) {\r\n\r\n\t\t\tconst indices = [];\r\n\r\n\t\t\tconst position = geometry.getAttribute( 'position' );\r\n\r\n\t\t\tif ( position !== undefined ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < position.count; i ++ ) {\r\n\r\n\t\t\t\t\tindices.push( i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.setIndex( indices );\r\n\t\t\t\tindex = geometry.getIndex();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible.' );\r\n\t\t\t\treturn geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst numberOfTriangles = index.count - 2;\r\n\t\tconst newIndices = [];\r\n\r\n\t\tif ( drawMode === TriangleFanDrawMode ) {\r\n\r\n\t\t\t// gl.TRIANGLE_FAN\r\n\r\n\t\t\tfor ( let i = 1; i <= numberOfTriangles; i ++ ) {\r\n\r\n\t\t\t\tnewIndices.push( index.getX( 0 ) );\r\n\t\t\t\tnewIndices.push( index.getX( i ) );\r\n\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// gl.TRIANGLE_STRIP\r\n\r\n\t\t\tfor ( let i = 0; i < numberOfTriangles; i ++ ) {\r\n\r\n\t\t\t\tif ( i % 2 === 0 ) {\r\n\r\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\r\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\r\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tnewIndices.push( index.getX( i + 2 ) );\r\n\t\t\t\t\tnewIndices.push( index.getX( i + 1 ) );\r\n\t\t\t\t\tnewIndices.push( index.getX( i ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( newIndices.length / 3 ) !== numberOfTriangles ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.' );\r\n\r\n\t\t}\r\n\r\n\t\t// build final geometry\r\n\r\n\t\tconst newGeometry = geometry.clone();\r\n\t\tnewGeometry.setIndex( newIndices );\r\n\t\tnewGeometry.clearGroups();\r\n\r\n\t\treturn newGeometry;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:', drawMode );\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Calculates the morphed attributes of a morphed/skinned BufferGeometry.\r\n * Helpful for Raytracing or Decals.\r\n * @param {Mesh | Line | Points} object An instance of Mesh, Line or Points.\r\n * @return {Object} An Object with original position/normal attributes and morphed ones.\r\n */\r\nfunction computeMorphedAttributes( object ) {\r\n\r\n\tif ( object.geometry.isBufferGeometry !== true ) {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometryUtils: Geometry is not of type BufferGeometry.' );\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tconst _vA = new Vector3();\r\n\tconst _vB = new Vector3();\r\n\tconst _vC = new Vector3();\r\n\r\n\tconst _tempA = new Vector3();\r\n\tconst _tempB = new Vector3();\r\n\tconst _tempC = new Vector3();\r\n\r\n\tconst _morphA = new Vector3();\r\n\tconst _morphB = new Vector3();\r\n\tconst _morphC = new Vector3();\r\n\r\n\tfunction _calculateMorphedAttributeData(\r\n\t\tobject,\r\n\t\tattribute,\r\n\t\tmorphAttribute,\r\n\t\tmorphTargetsRelative,\r\n\t\ta,\r\n\t\tb,\r\n\t\tc,\r\n\t\tmodifiedAttributeArray\r\n\t) {\r\n\r\n\t\t_vA.fromBufferAttribute( attribute, a );\r\n\t\t_vB.fromBufferAttribute( attribute, b );\r\n\t\t_vC.fromBufferAttribute( attribute, c );\r\n\r\n\t\tconst morphInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphAttribute && morphInfluences ) {\r\n\r\n\t\t\t_morphA.set( 0, 0, 0 );\r\n\t\t\t_morphB.set( 0, 0, 0 );\r\n\t\t\t_morphC.set( 0, 0, 0 );\r\n\r\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst influence = morphInfluences[ i ];\r\n\t\t\t\tconst morph = morphAttribute[ i ];\r\n\r\n\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t_tempA.fromBufferAttribute( morph, a );\r\n\t\t\t\t_tempB.fromBufferAttribute( morph, b );\r\n\t\t\t\t_tempC.fromBufferAttribute( morph, c );\r\n\r\n\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\r\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\r\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\r\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\r\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_vA.add( _morphA );\r\n\t\t\t_vB.add( _morphB );\r\n\t\t\t_vC.add( _morphC );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\tobject.boneTransform( a, _vA );\r\n\t\t\tobject.boneTransform( b, _vB );\r\n\t\t\tobject.boneTransform( c, _vC );\r\n\r\n\t\t}\r\n\r\n\t\tmodifiedAttributeArray[ a * 3 + 0 ] = _vA.x;\r\n\t\tmodifiedAttributeArray[ a * 3 + 1 ] = _vA.y;\r\n\t\tmodifiedAttributeArray[ a * 3 + 2 ] = _vA.z;\r\n\t\tmodifiedAttributeArray[ b * 3 + 0 ] = _vB.x;\r\n\t\tmodifiedAttributeArray[ b * 3 + 1 ] = _vB.y;\r\n\t\tmodifiedAttributeArray[ b * 3 + 2 ] = _vB.z;\r\n\t\tmodifiedAttributeArray[ c * 3 + 0 ] = _vC.x;\r\n\t\tmodifiedAttributeArray[ c * 3 + 1 ] = _vC.y;\r\n\t\tmodifiedAttributeArray[ c * 3 + 2 ] = _vC.z;\r\n\r\n\t}\r\n\r\n\tconst geometry = object.geometry;\r\n\tconst material = object.material;\r\n\r\n\tlet a, b, c;\r\n\tconst index = geometry.index;\r\n\tconst positionAttribute = geometry.attributes.position;\r\n\tconst morphPosition = geometry.morphAttributes.position;\r\n\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\tconst normalAttribute = geometry.attributes.normal;\r\n\tconst morphNormal = geometry.morphAttributes.position;\r\n\r\n\tconst groups = geometry.groups;\r\n\tconst drawRange = geometry.drawRange;\r\n\tlet i, j, il, jl;\r\n\tlet group;\r\n\tlet start, end;\r\n\r\n\tconst modifiedPosition = new Float32Array( positionAttribute.count * positionAttribute.itemSize );\r\n\tconst modifiedNormal = new Float32Array( normalAttribute.count * normalAttribute.itemSize );\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\t// indexed buffer geometry\r\n\r\n\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgroup = groups[ i ];\r\n\r\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\ta = index.getX( j );\r\n\t\t\t\t\tb = index.getX( j + 1 );\r\n\t\t\t\t\tc = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\t\tobject,\r\n\t\t\t\t\t\tpositionAttribute,\r\n\t\t\t\t\t\tmorphPosition,\r\n\t\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\t\ta, b, c,\r\n\t\t\t\t\t\tmodifiedPosition\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\t\tobject,\r\n\t\t\t\t\t\tnormalAttribute,\r\n\t\t\t\t\t\tmorphNormal,\r\n\t\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\t\ta, b, c,\r\n\t\t\t\t\t\tmodifiedNormal\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\ta = index.getX( i );\r\n\t\t\t\tb = index.getX( i + 1 );\r\n\t\t\t\tc = index.getX( i + 2 );\r\n\r\n\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tpositionAttribute,\r\n\t\t\t\t\tmorphPosition,\r\n\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\ta, b, c,\r\n\t\t\t\t\tmodifiedPosition\r\n\t\t\t\t);\r\n\r\n\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnormalAttribute,\r\n\t\t\t\t\tmorphNormal,\r\n\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\ta, b, c,\r\n\t\t\t\t\tmodifiedNormal\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// non-indexed buffer geometry\r\n\r\n\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgroup = groups[ i ];\r\n\r\n\t\t\t\tstart = Math.max( group.start, drawRange.start );\r\n\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\ta = j;\r\n\t\t\t\t\tb = j + 1;\r\n\t\t\t\t\tc = j + 2;\r\n\r\n\t\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\t\tobject,\r\n\t\t\t\t\t\tpositionAttribute,\r\n\t\t\t\t\t\tmorphPosition,\r\n\t\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\t\ta, b, c,\r\n\t\t\t\t\t\tmodifiedPosition\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\t\tobject,\r\n\t\t\t\t\t\tnormalAttribute,\r\n\t\t\t\t\t\tmorphNormal,\r\n\t\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\t\ta, b, c,\r\n\t\t\t\t\t\tmodifiedNormal\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstart = Math.max( 0, drawRange.start );\r\n\t\t\tend = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\ta = i;\r\n\t\t\t\tb = i + 1;\r\n\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tpositionAttribute,\r\n\t\t\t\t\tmorphPosition,\r\n\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\ta, b, c,\r\n\t\t\t\t\tmodifiedPosition\r\n\t\t\t\t);\r\n\r\n\t\t\t\t_calculateMorphedAttributeData(\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnormalAttribute,\r\n\t\t\t\t\tmorphNormal,\r\n\t\t\t\t\tmorphTargetsRelative,\r\n\t\t\t\t\ta, b, c,\r\n\t\t\t\t\tmodifiedNormal\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst morphedPositionAttribute = new Float32BufferAttribute( modifiedPosition, 3 );\r\n\tconst morphedNormalAttribute = new Float32BufferAttribute( modifiedNormal, 3 );\r\n\r\n\treturn {\r\n\r\n\t\tpositionAttribute: positionAttribute,\r\n\t\tnormalAttribute: normalAttribute,\r\n\t\tmorphedPositionAttribute: morphedPositionAttribute,\r\n\t\tmorphedNormalAttribute: morphedNormalAttribute\r\n\r\n\t};\r\n\r\n}\r\n\r\nfunction mergeGroups( geometry ) {\r\n\r\n\tif ( geometry.groups.length === 0 ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometryUtils.mergeGroups(): No groups are defined. Nothing to merge.' );\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tlet groups = geometry.groups;\r\n\r\n\t// sort groups by material index\r\n\r\n\tgroups = groups.sort( ( a, b ) => {\r\n\r\n\t\tif ( a.materialIndex !== b.materialIndex ) return a.materialIndex - b.materialIndex;\r\n\r\n\t\treturn a.start - b.start;\r\n\r\n\t} );\r\n\r\n\t// create index for non-indexed geometries\r\n\r\n\tif ( geometry.getIndex() === null ) {\r\n\r\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\t\tconst indices = [];\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i += 3 ) {\r\n\r\n\t\t\tindices.push( i, i + 1, i + 2 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setIndex( indices );\r\n\r\n\t}\r\n\r\n\t// sort index\r\n\r\n\tconst index = geometry.getIndex();\r\n\r\n\tconst newIndices = [];\r\n\r\n\tfor ( let i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\tconst group = groups[ i ];\r\n\r\n\t\tconst groupStart = group.start;\r\n\t\tconst groupLength = groupStart + group.count;\r\n\r\n\t\tfor ( let j = groupStart; j < groupLength; j ++ ) {\r\n\r\n\t\t\tnewIndices.push( index.getX( j ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dispose(); // Required to force buffer recreation\r\n\tgeometry.setIndex( newIndices );\r\n\r\n\t// update groups indices\r\n\r\n\tlet start = 0;\r\n\r\n\tfor ( let i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\tconst group = groups[ i ];\r\n\r\n\t\tgroup.start = start;\r\n\t\tstart += group.count;\r\n\r\n\t}\r\n\r\n\t// merge groups\r\n\r\n\tlet currentGroup = groups[ 0 ];\r\n\r\n\tgeometry.groups = [ currentGroup ];\r\n\r\n\tfor ( let i = 1; i < groups.length; i ++ ) {\r\n\r\n\t\tconst group = groups[ i ];\r\n\r\n\t\tif ( currentGroup.materialIndex === group.materialIndex ) {\r\n\r\n\t\t\tcurrentGroup.count += group.count;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentGroup = group;\r\n\t\t\tgeometry.groups.push( currentGroup );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n}\r\n\r\n\r\n\r\n;// CONCATENATED MODULE: ./src/content/MSDFGlyph.js\r\n\r\n\r\n/**\r\n * Job: create a plane geometry with the right UVs to map the MSDF texture on the wanted glyph.\r\n *\r\n * Knows: dimension of the plane to create, specs of the font used, glyph requireed\r\n */\r\nclass MSDFGlyph extends external_three_namespaceObject.PlaneGeometry {\r\n\r\n\tconstructor( inline, font ) {\r\n\r\n\t\tconst char = inline.glyph;\r\n\t\tconst fontSize = inline.fontSize;\r\n\r\n\t\t// super( fontSize, fontSize );\r\n\t\tsuper( inline.width, inline.height );\r\n\r\n\t\t// Misc glyphs\r\n\t\tif ( char.match( /\\s/g ) === null ) {\r\n\r\n\t\t\tif ( font.info.charset.indexOf( char ) === -1 ) console.error( `The character '${char}' is not included in the font characters set.` );\r\n\r\n\t\t\tthis.mapUVs( font, char );\r\n\r\n\t\t\tthis.transformGeometry( inline );\r\n\r\n\t\t\t// White spaces (we don't want our plane geometry to have a visual width nor a height)\r\n\t\t} else {\r\n\r\n\t\t\tthis.nullifyUVs();\r\n\r\n\t\t\tthis.scale( 0, 0, 1 );\r\n\t\t\tthis.translate( 0, fontSize / 2, 0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Compute the right UVs that will map the MSDF texture so that the passed character\r\n\t * will appear centered in full size\r\n\t * @private\r\n\t */\r\n\tmapUVs( font, char ) {\r\n\r\n\t\tconst charOBJ = font.chars.find( charOBJ => charOBJ.char === char );\r\n\r\n\t\tconst common = font.common;\r\n\r\n\t\tconst xMin = charOBJ.x / common.scaleW;\r\n\r\n\t\tconst xMax = ( charOBJ.x + charOBJ.width ) / common.scaleW;\r\n\r\n\t\tconst yMin = 1 - ( ( charOBJ.y + charOBJ.height ) / common.scaleH );\r\n\r\n\t\tconst yMax = 1 - ( charOBJ.y / common.scaleH );\r\n\r\n\t\t//\r\n\r\n\t\tconst uvAttribute = this.attributes.uv;\r\n\r\n\t\tfor ( let i = 0; i < uvAttribute.count; i++ ) {\r\n\r\n\t\t\tlet u = uvAttribute.getX( i );\r\n\t\t\tlet v = uvAttribute.getY( i );\r\n\r\n\t\t\t[ u, v ] = ( () => {\r\n\r\n\t\t\t\tswitch ( i ) {\r\n\r\n\t\t\t\t\tcase 0 :\r\n\t\t\t\t\t\treturn [ xMin, yMax ];\r\n\t\t\t\t\tcase 1 :\r\n\t\t\t\t\t\treturn [ xMax, yMax ];\r\n\t\t\t\t\tcase 2 :\r\n\t\t\t\t\t\treturn [ xMin, yMin ];\r\n\t\t\t\t\tcase 3 :\r\n\t\t\t\t\t\treturn [ xMax, yMin ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )();\r\n\r\n\t\t\tuvAttribute.setXY( i, u, v );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/** Set all UVs to 0, so that none of the glyphs on the texture will appear */\r\n\tnullifyUVs() {\r\n\r\n\t\tconst uvAttribute = this.attributes.uv;\r\n\r\n\t\tfor ( let i = 0; i < uvAttribute.count; i++ ) {\r\n\r\n\t\t\tuvAttribute.setXY( i, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/** Gives the previously computed scale and offset to the geometry */\r\n\ttransformGeometry( inline ) {\r\n\r\n\t\tthis.translate(\r\n\t\t\tinline.width / 2,\r\n\t\t\t\tinline.height / 2,\r\n\t\t\t0\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/content/MSDFText.js\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n\r\nJob:\r\n- Computing glyphs dimensions according to this component's font and content\r\n- Create the text Mesh (call MSDFGlyph for each letter)\r\n\r\nKnows:\r\n- The Text component for which it creates Meshes\r\n- The parameters of the text mesh it must return\r\n\r\n */\r\n\r\nfunction getGlyphDimensions( options ) {\r\n\r\n\tconst FONT = options.font;\r\n\r\n\tconst FONT_SIZE = options.fontSize;\r\n\r\n\tconst GLYPH = options.glyph;\r\n\r\n\tconst SCALE_MULT = FONT_SIZE / FONT.info.size;\r\n\r\n\t//\r\n\r\n\tconst charOBJ = FONT.chars.find( charOBJ => charOBJ.char === GLYPH );\r\n\r\n\tlet width = charOBJ ? charOBJ.width * SCALE_MULT : FONT_SIZE / 3;\r\n\r\n\tlet height = charOBJ ? charOBJ.height * SCALE_MULT : 0;\r\n\r\n\t// handle exported whitespaces\r\n\tif ( width === 0 ) {\r\n\r\n\t\t// if this whitespaces in is the charset, use its xadvance value\r\n\t\t// or fallback to fontSize\r\n\t\twidth = charOBJ ? charOBJ.xadvance * SCALE_MULT : FONT_SIZE;\r\n\r\n\t}\r\n\r\n\r\n\tif ( height === 0 ) height = FONT_SIZE * 0.7;\r\n\r\n\tif ( GLYPH === '\\n' ) width = 0;\r\n\r\n\tconst xadvance = charOBJ ? charOBJ.xadvance * SCALE_MULT : width;\r\n\tconst xoffset = charOBJ ? charOBJ.xoffset * SCALE_MULT : 0;\r\n\r\n\t// world-space length between lowest point and the text cursor position\r\n\t// const anchor = charOBJ ? ( ( charOBJ.yoffset + charOBJ.height - FONT.common.base ) * FONT_SIZE ) / FONT.common.lineHeight : 0;\r\n\r\n\tconst anchor = charOBJ ? charOBJ.yoffset * SCALE_MULT : 0;\r\n\r\n\t// console.log( lineHeight )\r\n\r\n\treturn {\r\n\t\t// lineHeight,\r\n\t\twidth,\r\n\t\theight,\r\n\t\tanchor,\r\n\t\txadvance,\r\n\t\txoffset\r\n\t};\r\n\r\n}\r\n\r\n\r\n/**\r\n * Try to find the kerning amount of a\r\n * @param font\r\n * @param {string} glyphPair\r\n * @returns {number}\r\n */\r\nfunction getGlyphPairKerning( font, glyphPair ) {\r\n\r\n\tconst KERNINGS = font._kernings;\r\n\treturn KERNINGS[ glyphPair ] ? KERNINGS[ glyphPair ] : 0;\r\n\r\n}\r\n\r\n\r\n//\r\n\r\n/**\r\n * Creates a THREE.Plane geometry, with UVs carefully positioned to map a particular\r\n * glyph on the MSDF texture. Then creates a shaderMaterial with the MSDF shaders,\r\n * creates a THREE.Mesh, returns it.\r\n * @private\r\n */\r\nfunction buildText() {\r\n\r\n\tconst translatedGeom = [];\r\n\r\n\tthis.inlines.forEach( ( inline, i ) => {\r\n\r\n\t\ttranslatedGeom[ i ] = new MSDFGlyph( inline, this.getFontFamily() );\r\n\r\n\t\ttranslatedGeom[ i ].translate( inline.offsetX, inline.offsetY, 0 );\r\n\r\n\t} );\r\n\r\n\tconst mergedGeom = mergeBufferGeometries( translatedGeom );\r\n\r\n\tconst mesh = new external_three_namespaceObject.Mesh( mergedGeom, this.getFontMaterial() );\r\n\r\n\treturn mesh;\r\n\r\n}\r\n\r\n//\r\n\r\n/* harmony default export */ const MSDFText = ({\r\n\tgetGlyphDimensions,\r\n\tgetGlyphPairKerning,\r\n\tbuildText\r\n});\r\n\r\n;// CONCATENATED MODULE: ./src/components/core/TextManager.js\r\n\r\n\r\n/**\r\n\r\nJob:\r\n- Routing the request for Text dimensions and Text creation depending on Text type.\r\n\r\nKnows:\r\n- this component's textType attribute\r\n\r\nNote:\r\nOnly one Text type is natively supported by the library at the moment,\r\nbut the architecture allows you to easily stick in your custom Text type.\r\nMore information here :\r\nhttps://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type\r\n\r\n */\r\nfunction TextManager( Base ) {\r\n\r\n\treturn class TextManager extends Base {\r\n\r\n\t\tcreateText() {\r\n\r\n\t\t\tconst component = this;\r\n\r\n\t\t\tconst mesh = ( () => {\r\n\r\n\t\t\t\tswitch ( this.getTextType() ) {\r\n\r\n\t\t\t\t\tcase 'MSDF' :\r\n\t\t\t\t\t\treturn MSDFText.buildText.call( this );\r\n\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tconsole.warn( `'${this.getTextType()}' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )();\r\n\r\n\t\t\tmesh.renderOrder = Infinity;\r\n\r\n\t\t\t// This is for hiddenOverflow to work\r\n\t\t\tmesh.onBeforeRender = function () {\r\n\r\n\t\t\t\tif ( component.updateClippingPlanes ) {\r\n\r\n\t\t\t\t\tcomponent.updateClippingPlanes();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t\treturn mesh;\r\n\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called by Text to get the dimensions of a particular glyph,\r\n\t\t * in order for InlineManager to compute its position\r\n\t\t */\r\n\t\tgetGlyphDimensions( options ) {\r\n\r\n\t\t\tswitch ( options.textType ) {\r\n\r\n\t\t\t\tcase 'MSDF' :\r\n\r\n\t\t\t\t\treturn MSDFText.getGlyphDimensions( options );\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tconsole.warn( `'${options.textType}' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Called by Text to get the amount of kerning for pair of glyph\r\n\t\t * @param textType\r\n\t\t * @param font\r\n\t\t * @param glyphPair\r\n\t\t * @returns {number}\r\n\t\t */\r\n\t\tgetGlyphPairKerning( textType, font, glyphPair ) {\r\n\r\n\t\t\tswitch ( textType ) {\r\n\r\n\t\t\t\tcase 'MSDF' :\r\n\r\n\t\t\t\t\treturn MSDFText.getGlyphPairKerning( font, glyphPair );\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tconsole.warn( `'${textType}' is not a supported text type.\\nSee https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t};\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/utils/deepDelete.js\r\n\r\n\r\n/** Recursively erase THE CHILDREN of the passed object */\r\nfunction deepDelete( object3D ) {\r\n\r\n\tobject3D.children.forEach( ( child ) => {\r\n\r\n\t\tif ( child.children.length > 0 ) deepDelete( child );\r\n\r\n\t\tobject3D.remove( child );\r\n\r\n\t\tUpdateManager.disposeOf( child );\r\n\r\n\t\tif ( child.material ) child.material.dispose();\r\n\r\n\t\tif ( child.geometry ) child.geometry.dispose();\r\n\r\n\t} );\r\n\r\n\tobject3D.children = [];\r\n\r\n}\r\n\r\n/* harmony default export */ const utils_deepDelete = (deepDelete);\r\n\r\n;// CONCATENATED MODULE: ./src/components/Text.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n\r\nJob:\r\n- computing its own size according to user measurements or content measurement\r\n- creating 'inlines' objects with info, so that the parent component can organise them in lines\r\n\r\nKnows:\r\n- Its text content (string)\r\n- Font attributes ('font', 'fontSize'.. etc..)\r\n- Parent block\r\n\r\n */\r\nclass Text extends mix.withBase( external_three_namespaceObject.Object3D )(\r\n\tInlineComponent,\r\n\tTextManager,\r\n\tMaterialManager,\r\n\tMeshUIComponent\r\n) {\r\n\r\n\tconstructor( options ) {\r\n\r\n\t\tsuper( options );\r\n\r\n\t\tthis.isText = true;\r\n\r\n\t\tthis.set( options );\r\n\r\n\t}\r\n\r\n\t///////////\r\n\t// UPDATES\r\n\t///////////\r\n\r\n\r\n\t/**\r\n\t * Here we compute each glyph dimension, and we store it in this\r\n\t * component's inlines parameter. This way the parent Block will\r\n\t * compute each glyph position on updateLayout.\r\n\t */\r\n\tparseParams() {\r\n\r\n\t\tthis.calculateInlines( this._fitFontSize || this.getFontSize() );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Create text content\r\n\t *\r\n\t * At this point, text.inlines should have been modified by the parent\r\n\t * component, to add xOffset and yOffset properties to each inlines.\r\n\t * This way, TextContent knows were to position each character.\r\n\t */\r\n\tupdateLayout() {\r\n\r\n\t\tutils_deepDelete( this );\r\n\r\n\t\tif ( this.inlines ) {\r\n\r\n\t\t\t// happening in TextManager\r\n\t\t\tthis.textContent = this.createText();\r\n\r\n\t\t\tthis.updateTextMaterial();\r\n\r\n\t\t\tthis.add( this.textContent );\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.z = this.getOffset();\r\n\r\n\t}\r\n\r\n\tupdateInner() {\r\n\r\n\t\tthis.position.z = this.getOffset();\r\n\r\n\t\tif ( this.textContent ) this.updateTextMaterial();\r\n\r\n\t}\r\n\r\n\tcalculateInlines( fontSize ) {\r\n\r\n\t\tconst content = this.content;\r\n\t\tconst font = this.getFontFamily();\r\n\t\tconst breakChars = this.getBreakOn();\r\n\t\tconst textType = this.getTextType();\r\n\t\tconst whiteSpace = this.getWhiteSpace();\r\n\r\n\t\t// Abort condition\r\n\r\n\t\tif ( !font || typeof font === 'string' ) {\r\n\r\n\t\t\tif ( !core_FontLibrary.getFontOf( this ) ) console.warn( 'no font was found' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( !this.content ) {\r\n\r\n\t\t\tthis.inlines = null;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( !textType ) {\r\n\r\n\t\t\tconsole.error( `You must provide a 'textType' attribute so three-mesh-ui knows how to render your text.\\n See https://github.com/felixmariotto/three-mesh-ui/wiki/Using-a-custom-text-type` );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// collapse whitespace for white-space normal\r\n\t\tconst whitespaceProcessedContent = collapseWhitespaceOnString( content, whiteSpace );\r\n\t\tconst chars = Array.from ? Array.from( whitespaceProcessedContent ) : String( whitespaceProcessedContent ).split( '' );\r\n\r\n\r\n\t\t// Compute glyphs sizes\r\n\r\n\t\tconst SCALE_MULT = fontSize / font.info.size;\r\n\t\tconst lineHeight = font.common.lineHeight * SCALE_MULT;\r\n\t\tconst lineBase = font.common.base * SCALE_MULT;\r\n\r\n\t\tconst glyphInfos = chars.map( ( glyph ) => {\r\n\r\n\t\t\t// Get height, width, and anchor point of this glyph\r\n\t\t\tconst dimensions = this.getGlyphDimensions( {\r\n\t\t\t\ttextType,\r\n\t\t\t\tglyph,\r\n\t\t\t\tfont,\r\n\t\t\t\tfontSize\r\n\t\t\t} );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet lineBreak = null;\r\n\r\n\t\t\tif( whiteSpace !== NOWRAP ) {\r\n\r\n\t\t\t\tif ( breakChars.includes( glyph ) || glyph.match( /\\s/g ) ) lineBreak = 'possible';\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( glyph.match( /\\n/g ) ) {\r\n\r\n\t\t\t\tlineBreak = newlineBreakability( whiteSpace );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\treturn {\r\n\t\t\t\theight: dimensions.height,\r\n\t\t\t\twidth: dimensions.width,\r\n\t\t\t\tanchor: dimensions.anchor,\r\n\t\t\t\txadvance: dimensions.xadvance,\r\n\t\t\t\txoffset: dimensions.xoffset,\r\n\t\t\t\tlineBreak,\r\n\t\t\t\tglyph,\r\n\t\t\t\tfontSize,\r\n\t\t\t\tlineHeight,\r\n\t\t\t\tlineBase\r\n\t\t\t};\r\n\r\n\t\t} );\r\n\r\n\t\t// apply kerning\r\n\t\tif ( this.getFontKerning() !== 'none' ) {\r\n\r\n\t\t\t// First character won't be kerned with its void lefthanded peer\r\n\t\t\tfor ( let i = 1; i < glyphInfos.length; i++ ) {\r\n\r\n\t\t\t\tconst glyphInfo = glyphInfos[ i ];\r\n\t\t\t\tconst glyphPair = glyphInfos[ i - 1 ].glyph + glyphInfos[ i ].glyph;\r\n\r\n\t\t\t\t// retrieve the kerning from the font\r\n\t\t\t\tconst kerning = this.getGlyphPairKerning( textType, font, glyphPair );\r\n\r\n\t\t\t\t// compute the final kerning value according to requested fontSize\r\n\t\t\t\tglyphInfo[ 'kerning' ] = kerning * ( fontSize / font.info.size );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Update 'inlines' property, so that the parent can compute each glyph position\r\n\r\n\t\tthis.inlines = glyphInfos;\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/components/InlineBlock.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Job:\r\n * - computing its own size according to user measurements or content measurement\r\n * - creating an 'inlines' object with info, so that the parent component can organise it along with other inlines\r\n *\r\n * Knows:\r\n * - Its measurements parameter\r\n * - Parent block\r\n */\r\nclass InlineBlock extends mix.withBase( external_three_namespaceObject.Object3D )(\r\n\tInlineComponent,\r\n\tBoxComponent,\r\n\tInlineManager,\r\n\tMaterialManager,\r\n\tMeshUIComponent\r\n) {\r\n\r\n\tconstructor( options ) {\r\n\r\n\t\tsuper( options );\r\n\r\n\t\tthis.isInlineBlock = true;\r\n\r\n\t\t//\r\n\r\n\t\tthis.size = new external_three_namespaceObject.Vector2( 1, 1 );\r\n\r\n\t\tthis.frame = new Frame( this.getBackgroundMaterial() );\r\n\r\n\t\t// This is for hiddenOverflow to work\r\n\t\tthis.frame.onBeforeRender = () => {\r\n\r\n\t\t\tif ( this.updateClippingPlanes ) {\r\n\r\n\t\t\t\tthis.updateClippingPlanes();\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.add( this.frame );\r\n\r\n\t\t// Lastly set the options parameters to this object, which will trigger an update\r\n\r\n\t\tthis.set( options );\r\n\r\n\t}\r\n\r\n\t///////////\r\n\t// UPDATES\r\n\t///////////\r\n\r\n\tparseParams() {\r\n\r\n\t\t// Get image dimensions\r\n\r\n\t\tif ( !this.width ) console.warn( 'inlineBlock has no width. Set to 0.3 by default' );\r\n\t\tif ( !this.height ) console.warn( 'inlineBlock has no height. Set to 0.3 by default' );\r\n\r\n\t\tthis.inlines = [ {\r\n\t\t\theight: this.height || 0.3,\r\n\t\t\twidth: this.width || 0.3,\r\n\t\t\tanchor: 0,\r\n\t\t\tlineBreak: 'possible'\r\n\t\t} ];\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\r\n\t/**\r\n\t * Create text content\r\n\t *\r\n\t * At this point, text.inlines should have been modified by the parent\r\n\t * component, to add xOffset and yOffset properties to each inlines.\r\n\t * This way, TextContent knows were to position each character.\r\n\t *\r\n\t */\r\n\tupdateLayout() {\r\n\r\n\t\tconst WIDTH = this.getWidth();\r\n\t\tconst HEIGHT = this.getHeight();\r\n\r\n\t\tif ( this.inlines ) {\r\n\r\n\t\t\tconst options = this.inlines[ 0 ];\r\n\r\n\t\t\t// basic translation to put the plane's left bottom corner at the center of its space\r\n\t\t\tthis.position.set( options.width / 2, options.height / 2, 0 );\r\n\r\n\t\t\t// translation required by inlineManager to position this component inline\r\n\t\t\tthis.position.x += options.offsetX;\r\n\t\t\tthis.position.y += options.offsetY;\r\n\r\n\t\t}\r\n\r\n\t\tthis.size.set( WIDTH, HEIGHT );\r\n\t\tthis.frame.scale.set( WIDTH, HEIGHT, 1 );\r\n\r\n\t\tif ( this.frame ) this.updateBackgroundMaterial();\r\n\r\n\t\tthis.frame.renderOrder = this.getParentsNumber();\r\n\r\n\t\t// Position inner elements according to dimensions and layout parameters.\r\n\t\t// Delegate to BoxComponent.\r\n\r\n\t\tif ( this.childrenInlines.length ) {\r\n\r\n\t\t\tthis.computeInlinesPosition();\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeChildrenPosition();\r\n\r\n\t\tthis.position.z = this.getOffset();\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tupdateInner() {\r\n\r\n\t\tthis.position.z = this.getOffset();\r\n\r\n\t\tif ( this.frame ) this.updateBackgroundMaterial();\r\n\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/utils/Keymaps.js\r\n/**\r\n\r\nContains key maps for the Keyboard component.\r\nMost languages need a specific keyboard. Therefore, Keyboard takes a language attribute\r\nand if not passed tries to detect the language. If not found, it uses the basic QZERTY layout.\r\n\r\n */\r\n/* harmony default export */ const Keymaps = ({\r\n\r\n\tfr:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'p', upperCase: 'P' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'l', upperCase: 'L' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'm', upperCase: 'M' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t],\r\n\r\n\t///////////////////////////////////////////////////////////\r\n\r\n\teng:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'p', upperCase: 'P' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'l', upperCase: 'L' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.15, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'm', upperCase: 'M' } ] },\r\n\t\t\t\t\t{ width: 0.15, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t],\r\n\r\n\t////////////////////////////////////////////////////////////\r\n\r\n\tru:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'й', upperCase: 'Й' }, { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ц', upperCase: 'Ц' }, { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'у', upperCase: 'У' }, { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'к', upperCase: 'К' }, { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'е', upperCase: 'Е' }, { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'н', upperCase: 'Н' }, { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'г', upperCase: 'Г' }, { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ш', upperCase: 'Ш' }, { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'щ', upperCase: 'Щ' }, { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'з', upperCase: 'З' }, { lowerCase: 'p', upperCase: 'P' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'х', upperCase: 'Х' }, { lowerCase: '{', upperCase: '[' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ъ', upperCase: 'Ъ' }, { lowerCase: '}', upperCase: ']' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ф', upperCase: 'Ф' }, { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ы', upperCase: 'Ы' }, { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'в', upperCase: 'В' }, { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'а', upperCase: 'А' }, { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'п', upperCase: 'П' }, { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'р', upperCase: 'Р' }, { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'о', upperCase: 'О' }, { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'л', upperCase: 'Л' }, { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'д', upperCase: 'Д' }, { lowerCase: 'l', upperCase: 'L' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ж', upperCase: 'Ж' }, { lowerCase: ':', upperCase: ';' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'э', upperCase: 'Э' }, { lowerCase: '\"', upperCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ё', upperCase: 'Ё' }, { lowerCase: '|', upperCase: '\\\\' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1.5 / 12, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'я', upperCase: 'Я' }, { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ч', upperCase: 'Ч' }, { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'с', upperCase: 'С' }, { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'м', upperCase: 'М' }, { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'и', upperCase: 'И' }, { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'т', upperCase: 'Т' }, { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ь', upperCase: 'Ь' }, { lowerCase: 'm', upperCase: 'M' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'б', upperCase: 'Б' }, { lowerCase: ',', upperCase: '' } ] },\r\n\t\t\t\t\t{ width: 1 / 12, chars: [ { lowerCase: 'ю', upperCase: 'Ю' }, { lowerCase: '.', upperCase: '' } ] },\r\n\t\t\t\t\t{ width: 1.5 / 12, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.15, command: 'switch-set', chars: [ { lowerCase: 'eng' } ] },\r\n\t\t\t\t\t{ width: 0.15, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.3, command: 'switch', chars: [ { lowerCase: 'АБВ' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t],\r\n\r\n\t/////////////////////////////////////////////////////////\r\n\r\n\tde:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'p', upperCase: 'P' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'ü', upperCase: 'Ü' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'l', upperCase: 'L' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'ö', upperCase: 'Ö' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'ä', upperCase: 'Ä' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 2 / 11, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'm', upperCase: 'M' } ] },\r\n\t\t\t\t\t{ width: 2 / 11, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t],\r\n\r\n\t///////////////////////////////////////////////////////////\r\n\r\n\tes:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'p', upperCase: 'P' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'l', upperCase: 'L' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ñ', upperCase: 'Ñ' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.15, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'm', upperCase: 'M' } ] },\r\n\t\t\t\t\t{ width: 0.15, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t],\r\n\r\n\t//////////////////////////////////////////////////////////////////////\r\n\r\n\tel:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';', upperCase: ':' }, { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ς', upperCase: 'ς' }, { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ε', upperCase: 'Ε' }, { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ρ', upperCase: 'Ρ' }, { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'τ', upperCase: 'Τ' }, { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'υ', upperCase: 'Υ' }, { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'θ', upperCase: 'Θ' }, { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ι', upperCase: 'Ι' }, { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ο', upperCase: 'Ο' }, { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'π', upperCase: 'Π' }, { lowerCase: 'p', upperCase: 'P' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'α', upperCase: 'Α' }, { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'σ', upperCase: 'Σ' }, { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'δ', upperCase: 'Δ' }, { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'φ', upperCase: 'Φ' }, { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'γ', upperCase: 'Γ' }, { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'η', upperCase: 'Η' }, { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ξ', upperCase: 'Ξ' }, { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'κ', upperCase: 'Κ' }, { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'λ', upperCase: 'Λ' }, { lowerCase: 'l', upperCase: 'L' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.15, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ζ', upperCase: 'Ζ' }, { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'χ', upperCase: 'Χ' }, { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ψ', upperCase: 'Ψ' }, { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ω', upperCase: 'Ω' }, { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'β', upperCase: 'Β' }, { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'ν', upperCase: 'Ν' }, { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: 'μ', upperCase: 'Μ' }, { lowerCase: 'm', upperCase: 'M' } ] },\r\n\t\t\t\t\t{ width: 0.15, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.15, command: 'switch-set', chars: [ { lowerCase: 'eng' } ] },\r\n\t\t\t\t\t{ width: 0.15, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t],\r\n\r\n\t////////////////////////////////////////////////////////////////////////////////\r\n\r\n\tnord:\r\n\t\t[\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'q', upperCase: 'Q' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'w', upperCase: 'W' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'e', upperCase: 'E' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'r', upperCase: 'R' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 't', upperCase: 'T' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'y', upperCase: 'Y' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'u', upperCase: 'U' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'i', upperCase: 'I' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'o', upperCase: 'O' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'p', upperCase: 'P' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'å', upperCase: 'Å' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'a', upperCase: 'A' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 's', upperCase: 'S' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'd', upperCase: 'D' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'f', upperCase: 'F' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'g', upperCase: 'G' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'h', upperCase: 'H' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'j', upperCase: 'J' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'k', upperCase: 'K' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'l', upperCase: 'L' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'æ', upperCase: 'Æ' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'ø', upperCase: 'Ø' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 2 / 11, command: 'shift', chars: [ { icon: 'shift' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'z', upperCase: 'Z' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'x', upperCase: 'X' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'c', upperCase: 'C' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'v', upperCase: 'V' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'b', upperCase: 'B' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'n', upperCase: 'N' } ] },\r\n\t\t\t\t\t{ width: 1 / 11, chars: [ { lowerCase: 'm', upperCase: 'M' } ] },\r\n\t\t\t\t\t{ width: 2 / 11, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\r\n\t\t\t],\r\n\r\n\t\t\t[\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '1' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '2' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '3' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '4' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '5' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '6' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '7' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '8' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '9' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '0' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '@' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '#' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '|' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '_' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '&' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '-' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '+' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '(' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ')' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '/' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '=' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '*' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\"' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '\\'' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ':' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ';' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '!' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '?' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'backspace', chars: [ { icon: 'backspace' } ] }\r\n\t\t\t\t],\r\n\r\n\t\t\t\t[\r\n\t\t\t\t\t{ width: 0.2, command: 'switch', chars: [ { lowerCase: '.?12' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: ',' } ] },\r\n\t\t\t\t\t{ width: 0.4, command: 'space', chars: [ { icon: 'space' } ] },\r\n\t\t\t\t\t{ width: 0.1, chars: [ { lowerCase: '.' } ] },\r\n\t\t\t\t\t{ width: 0.2, command: 'enter', chars: [ { icon: 'enter' } ] }\r\n\t\t\t\t]\r\n\t\t\t]\r\n\t\t]\r\n\r\n});\r\n\r\n;// CONCATENATED MODULE: ./src/components/Keyboard.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n\r\nconst Keyboard_textureLoader = new external_three_namespaceObject.TextureLoader();\r\n\r\n//\r\n\r\n/**\r\n * Job: high-level component that returns a keyboard\r\n */\r\nclass Keyboard extends mix.withBase( external_three_namespaceObject.Object3D )( BoxComponent, MeshUIComponent ) {\r\n\r\n\tconstructor( options ) {\r\n\r\n\t\t// DEFAULTS\r\n\r\n\t\tif ( !options ) options = {};\r\n\t\tif ( !options.width ) options.width = 1;\r\n\t\tif ( !options.height ) options.height = 0.4;\r\n\t\tif ( !options.margin ) options.margin = 0.003;\r\n\t\tif ( !options.padding ) options.padding = 0.01;\r\n\r\n\t\t//\r\n\r\n\t\tsuper( options );\r\n\r\n\t\tthis.currentPanel = 0;\r\n\r\n\t\tthis.isLowerCase = true;\r\n\r\n\t\tthis.charsetCount = 1;\r\n\r\n\t\t//////////\r\n\t\t// KEYMAP\r\n\t\t//////////\r\n\r\n\t\t// ../utils/Keymaps contains information about various keyboard layouts\r\n\t\t// We select one depending on the user's browser language if\r\n\t\t// there is no options.language\r\n\r\n\t\tlet keymap;\r\n\r\n\t\tif ( options.language || navigator.language ) {\r\n\r\n\t\t\tswitch ( options.language || navigator.language ) {\r\n\r\n\t\t\t\tcase 'fr' :\r\n\t\t\t\tcase 'fr-CH' :\r\n\t\t\t\tcase 'fr-CA' :\r\n\t\t\t\t\tkeymap = Keymaps.fr;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ru' :\r\n\t\t\t\t\tthis.charsetCount = 2;\r\n\t\t\t\t\tkeymap = Keymaps.ru;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'de' :\r\n\t\t\t\tcase 'de-DE' :\r\n\t\t\t\tcase 'de-AT' :\r\n\t\t\t\tcase 'de-LI' :\r\n\t\t\t\tcase 'de-CH' :\r\n\t\t\t\t\tkeymap = Keymaps.de;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'es' :\r\n\t\t\t\tcase 'es-419' :\r\n\t\t\t\tcase 'es-AR' :\r\n\t\t\t\tcase 'es-CL' :\r\n\t\t\t\tcase 'es-CO' :\r\n\t\t\t\tcase 'es-ES' :\r\n\t\t\t\tcase 'es-CR' :\r\n\t\t\t\tcase 'es-US' :\r\n\t\t\t\tcase 'es-HN' :\r\n\t\t\t\tcase 'es-MX' :\r\n\t\t\t\tcase 'es-PE' :\r\n\t\t\t\tcase 'es-UY' :\r\n\t\t\t\tcase 'es-VE' :\r\n\t\t\t\t\tkeymap = Keymaps.es;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'el' :\r\n\t\t\t\t\tthis.charsetCount = 2;\r\n\t\t\t\t\tkeymap = Keymaps.el;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'nord' :\r\n\t\t\t\t\tkeymap = Keymaps.nord;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tkeymap = Keymaps.eng;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkeymap = Keymaps.eng;\r\n\r\n\t\t}\r\n\r\n\t\t////////////////////\r\n\t\t// BLOCKS CREATION\r\n\t\t////////////////////\r\n\r\n\t\t// PANELS\r\n\r\n\t\tthis.keys = [];\r\n\r\n\t\tthis.panels = keymap.map( ( panel ) => {\r\n\r\n\t\t\tconst lineHeight = ( options.height / panel.length ) - ( options.margin * 2 );\r\n\r\n\t\t\tconst panelBlock = new Block( {\r\n\t\t\t\twidth: options.width + ( options.padding * 2 ),\r\n\t\t\t\theight: options.height + ( options.padding * 2 ),\r\n\t\t\t\toffset: 0,\r\n\t\t\t\tpadding: options.padding,\r\n\t\t\t\tfontFamily: options.fontFamily,\r\n\t\t\t\tfontTexture: options.fontTexture,\r\n\t\t\t\tbackgroundColor: options.backgroundColor,\r\n\t\t\t\tbackgroundOpacity: options.backgroundOpacity\r\n\t\t\t} );\r\n\r\n\t\t\tpanelBlock.charset = 0;\r\n\r\n\t\t\tpanelBlock.add( ...panel.map( ( line ) => {\r\n\r\n\t\t\t\tconst lineBlock = new Block( {\r\n\t\t\t\t\twidth: options.width,\r\n\t\t\t\t\theight: lineHeight,\r\n\t\t\t\t\tmargin: options.margin,\r\n\t\t\t\t\tcontentDirection: 'row',\r\n\t\t\t\t\tjustifyContent: 'center'\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tlineBlock.frame.visible = false;\r\n\r\n\t\t\t\tconst keys = [];\r\n\r\n\t\t\t\tline.forEach( ( keyItem ) => {\r\n\r\n\t\t\t\t\tconst key = new Block( {\r\n\t\t\t\t\t\twidth: ( options.width * keyItem.width ) - ( options.margin * 2 ),\r\n\t\t\t\t\t\theight: lineHeight,\r\n\t\t\t\t\t\tmargin: options.margin,\r\n\t\t\t\t\t\tjustifyContent: 'center',\r\n\t\t\t\t\t\toffset: 0\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tconst char = keyItem.chars[ panelBlock.charset ].lowerCase || keyItem.chars[ panelBlock.charset ].icon || 'undif';\r\n\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t( char === 'enter' && options.enterTexture ) ||\r\n\t\t\t\t\t\t( char === 'shift' && options.shiftTexture ) ||\r\n\t\t\t\t\t\t( char === 'backspace' && options.backspaceTexture )\r\n\t\t\t\t\t) {\r\n\r\n\t\t\t\t\t\tconst url = ( () => {\r\n\r\n\t\t\t\t\t\t\tswitch ( char ) {\r\n\r\n\t\t\t\t\t\t\t\tcase 'backspace':\r\n\t\t\t\t\t\t\t\t\treturn options.backspaceTexture;\r\n\t\t\t\t\t\t\t\tcase 'enter':\r\n\t\t\t\t\t\t\t\t\treturn options.enterTexture;\r\n\t\t\t\t\t\t\t\tcase 'shift':\r\n\t\t\t\t\t\t\t\t\treturn options.shiftTexture;\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tconsole.warn( 'There is no icon image for this key' );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} )();\r\n\r\n\t\t\t\t\t\tKeyboard_textureLoader.load( url, ( texture ) => {\r\n\r\n\t\t\t\t\t\t\tkey.add(\r\n\t\t\t\t\t\t\t\tnew InlineBlock( {\r\n\t\t\t\t\t\t\t\t\twidth: key.width * 0.65,\r\n\t\t\t\t\t\t\t\t\theight: key.height * 0.65,\r\n\t\t\t\t\t\t\t\t\tbackgroundSize: 'contain',\r\n\t\t\t\t\t\t\t\t\tbackgroundTexture: texture\r\n\t\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tkey.add(\r\n\t\t\t\t\t\t\tnew Text( {\r\n\t\t\t\t\t\t\t\tcontent: char,\r\n\t\t\t\t\t\t\t\toffset: 0\r\n\t\t\t\t\t\t\t} )\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tkey.type = 'Key';\r\n\r\n\t\t\t\t\tkey.info = keyItem;\r\n\t\t\t\t\tkey.info.input = char;\r\n\t\t\t\t\tkey.panel = panelBlock;\r\n\r\n\t\t\t\t\t// line's keys\r\n\t\t\t\t\tkeys.push( key );\r\n\r\n\t\t\t\t\t// keyboard's keys\r\n\t\t\t\t\tthis.keys.push( key );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tlineBlock.add( ...keys );\r\n\r\n\t\t\t\treturn lineBlock;\r\n\r\n\t\t\t} ) );\r\n\r\n\t\t\treturn panelBlock;\r\n\r\n\t\t} );\r\n\r\n\t\tthis.add( this.panels[ 0 ] );\r\n\r\n\t\t// Lastly set the options parameters to this object, which will trigger an update\r\n\t\tthis.set( options );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Used to switch to an entirely different panel of this keyboard,\r\n\t * with potentially a completely different layout\r\n\t */\r\n\tsetNextPanel() {\r\n\r\n\t\tthis.panels.forEach( ( panel ) => {\r\n\r\n\t\t\tthis.remove( panel );\r\n\r\n\t\t} );\r\n\r\n\t\tthis.currentPanel = ( this.currentPanel + 1 ) % ( this.panels.length );\r\n\r\n\t\tthis.add( this.panels[ this.currentPanel ] );\r\n\r\n\t\tthis.update( true, true, true );\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Used to change the keys charset. Some layout support this,\r\n\t * like the Russian or Greek keyboard, to be able to switch to\r\n\t * English layout when necessary\r\n\t */\r\n\tsetNextCharset() {\r\n\r\n\t\tthis.panels[ this.currentPanel ].charset = ( this.panels[ this.currentPanel ].charset + 1 ) % this.charsetCount;\r\n\r\n\t\tthis.keys.forEach( ( key ) => {\r\n\r\n\t\t\t// Here we sort the keys, we only keep the ones that are part of the current panel.\r\n\r\n\t\t\tconst isInCurrentPanel = this.panels[ this.currentPanel ].getObjectById( key.id );\r\n\r\n\t\t\tif ( !isInCurrentPanel ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tconst char = key.info.chars[ key.panel.charset ] || key.info.chars[ 0 ];\r\n\r\n\t\t\tconst newContent = this.isLowerCase || !char.upperCase ? char.lowerCase : char.upperCase;\r\n\r\n\t\t\tif ( !key.childrenTexts.length ) return;\r\n\r\n\t\t\tconst textComponent = key.childrenTexts[0];\r\n\r\n\t\t\tkey.info.input = newContent;\r\n\r\n\t\t\ttextComponent.set( {\r\n\t\t\t\tcontent: newContent\r\n\t\t\t} );\r\n\r\n\t\t\ttextComponent.update( true, true, true );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t/** Toggle case for characters that support it. */\r\n\ttoggleCase() {\r\n\r\n\t\tthis.isLowerCase = !this.isLowerCase;\r\n\r\n\t\tthis.keys.forEach( ( key ) => {\r\n\r\n\t\t\tconst char = key.info.chars[ key.panel.charset ] || key.info.chars[ 0 ];\r\n\r\n\t\t\tconst newContent = this.isLowerCase || !char.upperCase ? char.lowerCase : char.upperCase;\r\n\r\n\t\t\tif ( !key.childrenTexts.length ) return;\r\n\r\n\t\t\tconst textComponent = key.childrenTexts[0];\r\n\r\n\t\t\tkey.info.input = newContent;\r\n\r\n\t\t\ttextComponent.set( {\r\n\t\t\t\tcontent: newContent\r\n\t\t\t} );\r\n\r\n\t\t\ttextComponent.update( true, true, true );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\t////////////\r\n\t//  UPDATE\r\n\t////////////\r\n\r\n\tparseParams() {\r\n\t}\r\n\r\n\tupdateLayout() {\r\n\t}\r\n\r\n\tupdateInner() {\r\n\t}\r\n\r\n}\r\n\r\n;// CONCATENATED MODULE: ./src/three-mesh-ui.js\r\n/* global global */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst update = () => UpdateManager.update();\r\n\r\nconst ThreeMeshUI = {\r\n\tBlock: Block,\r\n\tText: Text,\r\n\tInlineBlock: InlineBlock,\r\n\tKeyboard: Keyboard,\r\n\tFontLibrary: core_FontLibrary,\r\n\tupdate,\r\n\tTextAlign: TextAlign_namespaceObject,\r\n\tWhitespace: Whitespace_namespaceObject,\r\n\tJustifyContent: JustifyContent_namespaceObject,\r\n\tAlignItems: AlignItems_namespaceObject,\r\n\tContentDirection: ContentDirection_namespaceObject\r\n};\r\n\r\nif ( typeof global !== 'undefined' ) global.ThreeMeshUI = ThreeMeshUI;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* harmony default export */ const three_mesh_ui = (ThreeMeshUI);\r\n\r\nvar __webpack_exports__AlignItems = __webpack_exports__.g1;\r\nvar __webpack_exports__Block = __webpack_exports__.gO;\r\nvar __webpack_exports__ContentDirection = __webpack_exports__.km;\r\nvar __webpack_exports__FontLibrary = __webpack_exports__.zV;\r\nvar __webpack_exports__InlineBlock = __webpack_exports__.ol;\r\nvar __webpack_exports__JustifyContent = __webpack_exports__.uM;\r\nvar __webpack_exports__Keyboard = __webpack_exports__.N1;\r\nvar __webpack_exports__Text = __webpack_exports__.xv;\r\nvar __webpack_exports__TextAlign = __webpack_exports__.PH;\r\nvar __webpack_exports__Whitespace = __webpack_exports__.UH;\r\nvar __webpack_exports__default = __webpack_exports__.ZP;\r\nvar __webpack_exports__update = __webpack_exports__.Vx;\r\nexport { __webpack_exports__AlignItems as AlignItems, __webpack_exports__Block as Block, __webpack_exports__ContentDirection as ContentDirection, __webpack_exports__FontLibrary as FontLibrary, __webpack_exports__InlineBlock as InlineBlock, __webpack_exports__JustifyContent as JustifyContent, __webpack_exports__Keyboard as Keyboard, __webpack_exports__Text as Text, __webpack_exports__TextAlign as TextAlign, __webpack_exports__Whitespace as Whitespace, __webpack_exports__default as default, __webpack_exports__update as update };\r\n"],
  "mappings": "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",
  "names": ["x", "BufferAttribute", "Vector3", "lastInlineOffset", "height", "charOBJ", "charOBJ"]
}
